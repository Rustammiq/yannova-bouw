class MobileMenu {constructor() {this.menuToggle = document.getElementById('menu-toggle');this.navMenu = document.getElementById('nav-menu');this.isOpen = false;this.init()} init() {if (!this.menuToggle || !this.navMenu) return;this.menuToggle.addEventListener('click',() => this.toggleMenu());this.menuToggle.setAttribute('aria-expanded','false');this.menuToggle.setAttribute('aria-controls','nav-menu');document.querySelectorAll('.nav-menu a').forEach(link => {link.addEventListener('click',() => this.closeMenu())});document.addEventListener('click',(e) => {if (this.isOpen && !this.navMenu.contains(e.target) && !this.menuToggle.contains(e.target)) {this.closeMenu()} });document.addEventListener('keydown',(e) => {if (e.key === 'Escape' && this.isOpen) {this.closeMenu();this.menuToggle.focus()} })} toggleMenu() {this.isOpen = !this.isOpen;this.navMenu.classList.toggle('active',this.isOpen);this.menuToggle.setAttribute('aria-expanded',this.isOpen.toString());document.body.style.overflow = this.isOpen ? 'hidden' :''} closeMenu() {this.isOpen = false;this.navMenu.classList.remove('active');this.menuToggle.setAttribute('aria-expanded','false');document.body.style.overflow = ''} } const mobileMenu = new MobileMenu();class ContactForm {constructor() {this.form = document.querySelector('.contact-form');this.submitBtn = this.form?.querySelector('button[type="submit"]');this.init()} init() {if (!this.form) return;this.form.addEventListener('submit',(e) => this.handleSubmit(e));this.addValidationListeners();this.addAccessibilityFeatures()} addValidationListeners() {const fields = ['naam','email','bericht'];fields.forEach(fieldName => {const field = document.getElementById(fieldName);if (field) {field.addEventListener('blur',() => this.validateField(field));field.addEventListener('input',() => this.clearFieldError(field))} });const emailField = document.getElementById('email');if (emailField) {emailField.addEventListener('input',(e) => {this.validateEmailFormat(e.target)})} } validateField(field) {const value = field.value.trim();const fieldName = field.id;this.clearFieldError(field);if (!value) {this.showFieldError(field,`${this.getFieldLabel(fieldName)} is verplicht`);return false} switch (fieldName) {case 'email':if (!this.isValidEmail(value)) {this.showFieldError(field,'Voer een geldig emailadres in');return false} break;case 'bericht':if (value.length < 10) {this.showFieldError(field,'Bericht moet minimaal 10 tekens bevatten');return false} break} return true} validateEmailFormat(field) {const value = field.value.trim();if (value && !this.isValidEmail(value)) {this.showFieldError(field,'Voer een geldig emailadres in')} else {this.clearFieldError(field)} } isValidEmail(email) {const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;return emailRegex.test(email)} getFieldLabel(fieldName) {const labels = {naam:'Naam',email:'Email',telefoon:'Telefoon',bericht:'Bericht' };return labels[fieldName] || fieldName} showFieldError(field,message) {this.clearFieldError(field);const errorDiv = document.createElement('div');errorDiv.className = 'field-error';errorDiv.textContent = message;errorDiv.setAttribute('role','alert');field.classList.add('error');field.parentNode.appendChild(errorDiv);field.setAttribute('aria-invalid','true');field.setAttribute('aria-describedby',`${field.id}-error`);errorDiv.id = `${field.id}-error`} clearFieldError(field) {const existingError = field.parentNode.querySelector('.field-error');if (existingError) {existingError.remove()} field.classList.remove('error');field.removeAttribute('aria-invalid');field.removeAttribute('aria-describedby')} addAccessibilityFeatures() {const requiredFields = ['naam','email','bericht'];requiredFields.forEach(fieldName => {const field = document.getElementById(fieldName);if (field) {field.setAttribute('aria-required','true')} })} async handleSubmit(e) {e.preventDefault();const formData = {naam:document.getElementById('naam').value.trim(),email:document.getElementById('email').value.trim(),telefoon:document.getElementById('telefoon')?.value.trim() || '',bericht:document.getElementById('bericht').value.trim() };const isValid = Object.keys(formData).every(key => {const field = document.getElementById(key);return field ? this.validateField(field) :true});if (!isValid) {this.showNotification('Vul alle verplichte velden correct in','error');return} this.setLoadingState(true);try {const response = await this.submitForm(formData);if (response.success) {this.showNotification('Bedankt voor uw aanvraag! We nemen zo snel mogelijk contact met u op.','success');this.form.reset();this.clearAllErrors()} else {throw new Error(response.message || 'Er ging iets fout bij het verzenden')} } catch (error) {console.error('Form submission error:',error);this.showNotification('Er ging iets fout bij het verzenden. Probeer het later opnieuw.','error')} finally {this.setLoadingState(false)} } async submitForm(formData) {return new Promise((resolve) => {setTimeout(() => {const isSuccess = Math.random() > 0.2;resolve({success:isSuccess,message:isSuccess ? 'Formulier succesvol verzonden' :'Server error' })},1500)})} setLoadingState(loading) {if (this.submitBtn) {this.submitBtn.disabled = loading;this.submitBtn.innerHTML = loading ? '<i class="fas fa-spinner fa-spin"></i> Bezig met verzenden...' :'Verstuur bericht'} const formFields = this.form.querySelectorAll('input,textarea,button');formFields.forEach(field => {if (field !== this.submitBtn) {field.disabled = loading} })} showNotification(message,type = 'info') {const notification = document.createElement('div');notification.className = `notification notification-${type}`;notification.innerHTML = ` <div class="notification-content"> <span>${message}</span> <button class="notification-close" onclick="this.parentElement.parentElement.remove()"> <i class="fas fa-times"></i> </button> </div> `;const container = document.querySelector('.notification-container') || this.createNotificationContainer();container.appendChild(notification);setTimeout(() => {if (notification.parentNode) {notification.remove()} },5000);notification.setAttribute('role','alert');notification.setAttribute('aria-live','polite')} createNotificationContainer() {const container = document.createElement('div');container.className = 'notification-container';document.body.appendChild(container);return container} clearAllErrors() {const errorElements = this.form.querySelectorAll('.field-error');errorElements.forEach(error => error.remove());const errorFields = this.form.querySelectorAll('.error');errorFields.forEach(field => {field.classList.remove('error');field.removeAttribute('aria-invalid');field.removeAttribute('aria-describedby')})} } const contactForm = new ContactForm();document.querySelectorAll('a[href^="#"]').forEach(anchor => {anchor.addEventListener('click',function (e) {e.preventDefault();const target = document.querySelector(this.getAttribute('href'));if (target) {target.scrollIntoView({behavior:'smooth',block:'start' })} })});window.addEventListener('scroll',() => {const scrollTop = window.pageYOffset || document.documentElement.scrollTop;const scrollToTopBtn = document.getElementById('scroll-to-top');if (scrollTop > 300) {scrollToTopBtn.style.display = 'block'} else {scrollToTopBtn.style.display = 'none'} });class ScrollManager {constructor() {this.scrollToTopBtn = document.getElementById('scroll-to-top');this.observedSections = new Set();this.init()} init() {this.setupSmoothScrolling();this.setupScrollToTop();this.setupIntersectionObserver();this.setupScrollSpy()} setupSmoothScrolling() {document.querySelectorAll('a[href^="#"]').forEach(anchor => {anchor.addEventListener('click',(e) => {e.preventDefault();const targetId = anchor.getAttribute('href');const target = document.querySelector(targetId);if (target) {const headerHeight = document.querySelector('header')?.offsetHeight || 0;const targetPosition = target.offsetTop - headerHeight - 20;window.scrollTo({top:targetPosition,behavior:'smooth' });if (history.pushState) {history.pushState(null,null,targetId)} } })})} setupScrollToTop() {if (!this.scrollToTopBtn) return;let ticking = false;window.addEventListener('scroll',() => {if (!ticking) {requestAnimationFrame(() => {this.toggleScrollToTop();ticking = false});ticking = true} });this.scrollToTopBtn.addEventListener('click',() => {window.scrollTo({top:0,behavior:'smooth' });setTimeout(() => {document.querySelector('header')?.focus()},500)})} toggleScrollToTop() {const scrollTop = window.pageYOffset || document.documentElement.scrollTop;const shouldShow = scrollTop > 400;if (shouldShow && this.scrollToTopBtn.style.display !== 'flex') {this.scrollToTopBtn.style.display = 'flex';this.scrollToTopBtn.setAttribute('aria-hidden','false')} else if (!shouldShow && this.scrollToTopBtn.style.display !== 'none') {this.scrollToTopBtn.style.display = 'none';this.scrollToTopBtn.setAttribute('aria-hidden','true')} } setupIntersectionObserver() {const observerOptions = {threshold:0.1,rootMargin:'0px 0px -50px 0px' };const observer = new IntersectionObserver((entries) => {entries.forEach(entry => {if (entry.isIntersecting) {entry.target.classList.add('animate-in');observer.unobserve(entry.target)} })},observerOptions);document.querySelectorAll('.animate-on-scroll,.service-card,.about-text,.about-image').forEach(el => {observer.observe(el)})} setupScrollSpy() {const sections = document.querySelectorAll('section[id]');const navLinks = document.querySelectorAll('.nav-menu a[href^="#"]');if (sections.length === 0 || navLinks.length === 0) return;const observerOptions = {threshold:0.5,rootMargin:'-20% 0px -20% 0px' };const sectionObserver = new IntersectionObserver((entries) => {entries.forEach(entry => {if (entry.isIntersecting) {const sectionId = entry.target.id;navLinks.forEach(link => {link.classList.toggle('active',link.getAttribute('href') === `#${sectionId}`)})} })},observerOptions);sections.forEach(section => {sectionObserver.observe(section)})} } const scrollManager = new ScrollManager();class PerformanceMonitor {constructor() {this.init()} init() {window.addEventListener('load',() => {if ('performance' in window) {const perfData = performance.getEntriesByType('navigation')[0];const loadTime = perfData.loadEventEnd - perfData.fetchStart;if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {this.showPerformanceInfo(loadTime)} } });if ('PerformanceObserver' in window) {const observer = new PerformanceObserver((list) => {for (const entry of list.getEntries()) {if (entry.duration > 1000) {} } });observer.observe({entryTypes:['resource'] })} } showPerformanceInfo(loadTime) {const info = document.createElement('div');info.className = 'performance-info';info.innerHTML = ` <small style="position:fixed;bottom:10px;right:10px;background:rgba(0,0,0,0.8);color:white;padding:5px 10px;border-radius:3px;font-family:monospace;z-index:10000;"> Load time:${Math.round(loadTime)}ms </small> `;document.body.appendChild(info)} } if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {new PerformanceMonitor()} class YannovaQuoteGenerator {constructor() {this.currentStep = 1;this.totalSteps = 6;this.quoteData = {contact:{},project:{},preferences:{},measurements:{},timeline:{} };this.elements = {};this.init()} init() {this.cacheElements();this.bindEvents();this.loadSavedData();this.updateStep()} cacheElements() {this.elements = {modal:document.getElementById('quote-modal-container'),closeBtn:document.getElementById('quote-close'),prevBtn:document.getElementById('quote-prev'),nextBtn:document.getElementById('quote-next'),submitBtn:document.getElementById('quote-submit'),progressFill:document.getElementById('progress-fill'),progressText:document.getElementById('progress-text'),summaryList:document.getElementById('summary-list'),steps:document.querySelectorAll('.quote-step'),projectTypes:document.querySelectorAll('.project-type'),formInputs:document.querySelectorAll('#quote-modal-container input,#quote-modal-container select,#quote-modal-container textarea') }} bindEvents() {document.addEventListener('click',(e) => {if (e.target.matches('.btn-primary[href="#contact"],.quote-btn')) {e.preventDefault();this.openModal()} });this.elements.closeBtn.addEventListener('click',() => this.closeModal());document.addEventListener('keydown',(e) => {if (e.key === 'Escape' && this.elements.modal.classList.contains('open')) {this.closeModal()} });this.elements.nextBtn.addEventListener('click',() => this.nextStep());this.elements.prevBtn.addEventListener('click',() => this.prevStep());this.elements.submitBtn.addEventListener('click',() => this.submitQuote());this.elements.projectTypes.forEach(type => {type.addEventListener('click',() => this.selectProjectType(type))});this.elements.formInputs.forEach(input => {input.addEventListener('input',() => this.handleInputChange(input));input.addEventListener('change',() => this.handleInputChange(input));input.addEventListener('blur',() => this.validateField(input))});this.elements.modal.addEventListener('click',(e) => {if (e.target === this.elements.modal) {this.closeModal()} })} openModal() {this.elements.modal.classList.add('open');this.elements.modal.setAttribute('aria-hidden','false');document.body.style.overflow = 'hidden';const firstInput = this.elements.modal.querySelector('input[required]');if (firstInput) {setTimeout(() => firstInput.focus(),100)} this.trackEvent('quote_modal_opened')} closeModal() {this.elements.modal.classList.remove('open');this.elements.modal.setAttribute('aria-hidden','true');document.body.style.overflow = '';this.trackEvent('quote_modal_closed')} nextStep() {if (this.validateCurrentStep()) {if (this.currentStep < this.totalSteps) {this.animateStepTransition(() => {this.currentStep++;this.updateStep()})} } } prevStep() {if (this.currentStep > 1) {this.animateStepTransition(() => {this.currentStep--;this.updateStep()})} } animateStepTransition(callback) {const currentStepEl = document.getElementById(`step-${this.currentStep}`);currentStepEl.classList.add('exiting');setTimeout(() => {callback();currentStepEl.classList.remove('exiting')},200)} updateStep() {this.elements.steps.forEach(step => {step.classList.remove('active')});const currentStepEl = document.getElementById(`step-${this.currentStep}`);if (currentStepEl) {currentStepEl.classList.add('active')} const progress = (this.currentStep / this.totalSteps) * 100;this.elements.progressFill.style.width = `${progress}%`;this.elements.progressText.textContent = `Stap ${this.currentStep} van ${this.totalSteps}`;this.elements.prevBtn.style.display = this.currentStep > 1 ? 'flex' :'none';if (this.currentStep === this.totalSteps) {this.elements.nextBtn.style.display = 'none';this.elements.submitBtn.style.display = 'flex';this.updateSummary()} else {this.elements.nextBtn.style.display = 'flex';this.elements.submitBtn.style.display = 'none'} const firstInput = currentStepEl?.querySelector('input,select,textarea');if (firstInput) {setTimeout(() => firstInput.focus(),100)} } selectProjectType(element) {element.classList.toggle('selected');const selectedTypes = Array.from(this.elements.projectTypes) .filter(type => type.classList.contains('selected')) .map(type => type.getAttribute('data-type'));this.quoteData.project.types = selectedTypes;this.saveData()} handleInputChange(input) {this.saveData();if (input.matches('#quote-email,#quote-phone')) {this.validateField(input)} } validateCurrentStep() {const currentStepEl = document.getElementById(`step-${this.currentStep}`);const requiredFields = currentStepEl.querySelectorAll('[required]');this.clearErrors();let isValid = true;for (const field of requiredFields) {if (!this.validateField(field)) {isValid = false} } if (this.currentStep === 2) {if (!this.quoteData.project.types || this.quoteData.project.types.length === 0) {this.showError('Selecteer minimaal één project type');isValid = false} } if (this.currentStep === 6) {if (!document.getElementById('quote-terms').checked) {this.showError('U moet akkoord gaan met de privacyvoorwaarden');isValid = false} } return isValid} validateField(field) {const value = field.value.trim();const fieldLabel = field.previousElementSibling?.textContent || field.getAttribute('placeholder') || 'Dit veld';this.clearFieldError(field);field.classList.remove('error');if (!value) {if (field.hasAttribute('required')) {this.showFieldError(field,`${fieldLabel} is verplicht`);return false} return true} if (field.type === 'email' && !this.isValidEmail(value)) {this.showFieldError(field,'Voer een geldig e-mailadres in');return false} if (field.type === 'tel' && !this.isValidPhone(value)) {this.showFieldError(field,'Voer een geldig telefoonnummer in');return false} return true} isValidEmail(email) {const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;return emailRegex.test(email)} isValidPhone(phone) {const phoneRegex = /^[\+]?[0-9\s\-\(\)]{10,}$/;return phoneRegex.test(phone)} showFieldError(field,message) {field.classList.add('error');const errorDiv = document.createElement('div');errorDiv.className = 'field-error';errorDiv.textContent = message;field.parentNode.insertBefore(errorDiv,field.nextSibling)} clearFieldError(field) {const existingError = field.parentNode.querySelector('.field-error');if (existingError) {existingError.remove()} } clearErrors() {document.querySelectorAll('.field-error').forEach(error => error.remove());document.querySelectorAll('.error').forEach(field => field.classList.remove('error'));const errorBanner = document.querySelector('.error-banner');if (errorBanner) {errorBanner.remove()} } showError(message) {this.clearErrors();const errorDiv = document.createElement('div');errorDiv.className = 'error-banner';errorDiv.textContent = message;const stepsContainer = document.querySelector('.quote-steps');stepsContainer.insertBefore(errorDiv,stepsContainer.firstChild);setTimeout(() => errorDiv.remove(),5000)} saveData() {this.quoteData.contact = {name:document.getElementById('quote-name')?.value || '',email:document.getElementById('quote-email')?.value || '',phone:document.getElementById('quote-phone')?.value || '',address:document.getElementById('quote-address')?.value || '' };this.quoteData.preferences = {material:document.querySelector('input[name="material"]:checked')?.value || '',color:document.getElementById('quote-color')?.value || '' };this.quoteData.measurements = {notes:document.getElementById('quote-notes')?.value || '' };this.quoteData.timeline = {preferred:document.querySelector('input[name="timeline"]:checked')?.value || '',date:document.getElementById('quote-preferred-date')?.value || '',terms:document.getElementById('quote-terms')?.checked || false };localStorage.setItem('yannova_quote_data',JSON.stringify(this.quoteData))} loadSavedData() {try {const saved = localStorage.getItem('yannova_quote_data');if (saved) {this.quoteData = JSON.parse(saved);this.populateForm()} } catch (error) {} } populateForm() {if (this.quoteData.contact) {Object.keys(this.quoteData.contact).forEach(key => {const field = document.getElementById(`quote-${key}`);if (field) field.value = this.quoteData.contact[key] || ''})} if (this.quoteData.project.types) {this.quoteData.project.types.forEach(type => {const element = document.querySelector(`[data-type="${type}"]`);if (element) element.classList.add('selected')})} if (this.quoteData.preferences) {if (this.quoteData.preferences.material) {const materialInput = document.querySelector(`input[name="material"][value="${this.quoteData.preferences.material}"]`);if (materialInput) materialInput.checked = true} if (this.quoteData.preferences.color) {const colorField = document.getElementById('quote-color');if (colorField) colorField.value = this.quoteData.preferences.color} } if (this.quoteData.measurements) {const notesField = document.getElementById('quote-notes');if (notesField) notesField.value = this.quoteData.measurements.notes || ''} if (this.quoteData.timeline) {if (this.quoteData.timeline.preferred) {const timelineInput = document.querySelector(`input[name="timeline"][value="${this.quoteData.timeline.preferred}"]`);if (timelineInput) timelineInput.checked = true} if (this.quoteData.timeline.date) {const dateField = document.getElementById('quote-preferred-date');if (dateField) dateField.value = this.quoteData.timeline.date} if (this.quoteData.timeline.terms) {const termsField = document.getElementById('quote-terms');if (termsField) termsField.checked = true} } } updateSummary() {const summaryItems = [ {label:'Naam',value:this.quoteData.contact.name },{label:'E-mail',value:this.quoteData.contact.email },{label:'Telefoon',value:this.quoteData.contact.phone },{label:'Adres',value:this.quoteData.contact.address || 'Niet opgegeven' },{label:'Project type(s)',value:this.quoteData.project.types?.join(',') || 'Niet geselecteerd' },{label:'Materiaal voorkeur',value:this.quoteData.preferences.material || 'Geen voorkeur' },{label:'Kleur',value:this.quoteData.preferences.color || 'Niet opgegeven' },{label:'Project beschrijving',value:this.quoteData.measurements.notes || 'Niet opgegeven' },{label:'Timeline',value:this.quoteData.timeline.preferred || 'Niet geselecteerd' },{label:'Voorkeursdatum',value:this.quoteData.timeline.date || 'Niet opgegeven' } ];this.elements.summaryList.innerHTML = summaryItems .filter(item => item.value && item.value !== 'Niet opgegeven' && item.value !== 'Niet geselecteerd') .map(item => ` <li> <span class="summary-label">${item.label}:</span> <span class="summary-value">${item.value}</span> </li> `).join('')} async submitQuote() {if (!this.validateCurrentStep()) return;this.saveData();const submitBtn = this.elements.submitBtn;const originalText = submitBtn.innerHTML;submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Versturen...';submitBtn.disabled = true;try {const response = await fetch('/api/quotes',{method:'POST',headers:{'Content-Type':'application/json',},body:JSON.stringify({...this.quoteData,timestamp:new Date().toISOString(),source:'website' }) });const data = await response.json();if (data.success) {this.showSuccess('Uw offerte aanvraag is succesvol verstuurd! We nemen zo snel mogelijk contact met u op.');this.closeModal();this.resetForm();this.trackEvent('quote_submitted',{project_types:this.quoteData.project.types,material:this.quoteData.preferences.material })} else {throw new Error(data.error || 'Er is een fout opgetreden')} } catch (error) {console.error('Quote submission error:',error);this.showError('Er is een fout opgetreden bij het versturen van uw aanvraag. Probeer het later opnieuw.')} finally {submitBtn.innerHTML = originalText;submitBtn.disabled = false} } resetForm() {this.currentStep = 1;this.quoteData = {contact:{},project:{},preferences:{},measurements:{},timeline:{} };this.elements.formInputs.forEach(field => {if (field.type === 'checkbox') {field.checked = false} else {field.value = ''} });this.elements.projectTypes.forEach(type => {type.classList.remove('selected')});localStorage.removeItem('yannova_quote_data');this.updateStep()} showSuccess(message) {const successDiv = document.createElement('div');successDiv.className = 'quote-success';successDiv.innerHTML = ` <i class="fas fa-check-circle"></i> <div>${message}</div> `;document.body.appendChild(successDiv);setTimeout(() => {successDiv.remove()},5000)} trackEvent(eventName,data = {}) {if (window.yannovaAnalytics) {window.yannovaAnalytics.trackCustomEvent(eventName,data)} if (typeof gtag !== 'undefined') {gtag('event',eventName,{event_category:'quote_generator',...data })} } } document.addEventListener('DOMContentLoaded',() => {window.yannovaQuoteGenerator = new YannovaQuoteGenerator()});if (typeof module !== 'undefined' && module.exports) {module.exports = YannovaQuoteGenerator} class ErrorHandler {constructor() {this.init()} init() {window.addEventListener('error',(event) => {this.handleError(event.error,'JavaScript Error')});window.addEventListener('unhandledrejection',(event) => {this.handleError(event.reason,'Unhandled Promise Rejection')});this.interceptFetch()} handleError(error,type) {console.error(`${type}:`,error);if (typeof gtag !== 'undefined') {gtag('event','exception',{'description':error.message || error,'fatal':false })} if (this.isCriticalError(error)) {this.showUserError()} } isCriticalError(error) {const criticalPatterns = [ 'NetworkError','Failed to fetch','ChunkLoadError','Loading chunk' ];return criticalPatterns.some(pattern => error.message && error.message.includes(pattern) )} showUserError() {const errorDiv = document.createElement('div');errorDiv.className = 'error-notification';errorDiv.innerHTML = ` <div class="error-content"> <i class="fas fa-exclamation-triangle"></i> <span>Er is een probleem opgetreden. De pagina wordt opnieuw geladen.</span> <button onclick="window.location.reload()" class="retry-btn">Opnieuw laden</button> </div> `;const style = document.createElement('style');style.textContent = ` .error-notification {position:fixed;top:20px;right:20px;background:#ff4444;color:white;padding:1rem;border-radius:8px;box-shadow:0 4px 12px rgba(0,0,0,0.3);z-index:10000;max-width:400px;animation:slideIn 0.3s ease} .error-content {display:flex;align-items:center;gap:0.5rem} .retry-btn {background:rgba(255,255,255,0.2);border:1px solid rgba(255,255,255,0.3);color:white;padding:0.25rem 0.5rem;border-radius:4px;cursor:pointer;font-size:0.8rem} .retry-btn:hover {background:rgba(255,255,255,0.3)} @keyframes slideIn {from {transform:translateX(100%);opacity:0} to {transform:translateX(0);opacity:1} } `;document.head.appendChild(style);document.body.appendChild(errorDiv);setTimeout(() => {if (errorDiv.parentNode) {errorDiv.parentNode.removeChild(errorDiv)} },10000)} interceptFetch() {const originalFetch = window.fetch;window.fetch = async (...args) => {try {const response = await originalFetch(...args);if (!response.ok) {throw new Error(`HTTP ${response.status}:${response.statusText}`)} return response} catch (error) {this.handleError(error,'Fetch Error');throw error} }} } document.addEventListener('DOMContentLoaded',() => {new ErrorHandler()});class LayoutSwitcher {constructor() {this.layouts = ['grid','masonry','zigzag'];this.currentLayout = 'grid';this.controlsContainer = null;this.buttons = [];this.grids = document.querySelectorAll('.services-grid');if (this.grids.length > 0) {this.init()} } init() {this.createLayoutControls();this.bindEvents()} createLayoutControls() {const controls = document.createElement('div');controls.className = 'layout-controls';controls.innerHTML = ` <div class="layout-controls-container"> <span class="layout-label">Layout:</span> <div class="layout-buttons"> <button class="layout-btn active" data-layout="grid" title="Grid Layout"> <i class="fas fa-th"></i> </button> <button class="layout-btn" data-layout="masonry" title="Masonry Layout"> <i class="fas fa-th-list"></i> </button> <button class="layout-btn" data-layout="zigzag" title="Zigzag Layout"> <i class="fas fa-random"></i> </button> </div> </div> `;const firstCategory = document.querySelector('.service-category');if (firstCategory) {firstCategory.parentNode.insertBefore(controls,firstCategory);this.controlsContainer = controls.querySelector('.layout-buttons');this.buttons = controls.querySelectorAll('.layout-btn')} } bindEvents() {if (this.controlsContainer) {this.controlsContainer.addEventListener('click',(e) => {const button = e.target.closest('.layout-btn');if (button) {const layout = button.dataset.layout;this.switchLayout(layout);this.updateActiveButton(button)} })} } switchLayout(layout) {if (!this.layouts.includes(layout) || layout === this.currentLayout) return;this.currentLayout = layout;this.grids.forEach(grid => {this.layouts.forEach(l => grid.classList.remove(l));if (layout !== 'grid') {grid.classList.add(layout)} grid.style.transition = 'all 0.5s ease';setTimeout(() => {grid.style.transition = ''},500)})} updateActiveButton(activeBtn) {this.buttons.forEach(btn => btn.classList.remove('active'));activeBtn.classList.add('active')} } document.addEventListener('DOMContentLoaded',() => {new LayoutSwitcher()});document.addEventListener('DOMContentLoaded',() => {const observerOptions = {threshold:0.1,rootMargin:'0px 0px -50px 0px' };const observer = new IntersectionObserver((entries) => {entries.forEach((entry,index) => {if (entry.isIntersecting) {setTimeout(() => {entry.target.style.opacity = '1';entry.target.style.transform = 'translateY(0) scale(1)'},index * 100)} })},observerOptions);const cards = document.querySelectorAll('.service-card');cards.forEach((card,index) => {card.style.opacity = '0';card.style.transform = 'translateY(50px) scale(0.9)';card.style.transition = `opacity 0.8s cubic-bezier(0.4,0,0.2,1),transform 0.8s cubic-bezier(0.4,0,0.2,1)`;card.style.transitionDelay = `${index * 0.1}s`;observer.observe(card)});cards.forEach(card => {card.addEventListener('click',function(e) {const ripple = document.createElement('span');const rect = this.getBoundingClientRect();const size = Math.max(rect.width,rect.height);const x = e.clientX - rect.left - size / 2;const y = e.clientY - rect.top - size / 2;ripple.style.cssText = ` position:absolute;width:${size}px;height:${size}px;left:${x}px;top:${y}px;background:rgba(212,165,116,0.3);border-radius:50%;transform:scale(0);animation:ripple 0.6s linear;pointer-events:none;`;this.appendChild(ripple);setTimeout(() => {ripple.remove()},600)})});const style = document.createElement('style');style.textContent = ` @keyframes ripple {to {transform:scale(2);opacity:0} } `;document.head.appendChild(style)});class PerformanceOptimizer {constructor() {this.init()} init() {this.setupLazyLoading();this.setupDebouncedScroll();this.optimizeImages();this.preloadCriticalResources();this.setupIntersectionObserver()} setupLazyLoading() {if ('IntersectionObserver' in window) {const imageObserver = new IntersectionObserver((entries,observer) => {entries.forEach(entry => {if (entry.isIntersecting) {const img = entry.target;this.loadImage(img);observer.unobserve(img)} })},{rootMargin:'50px 0px',threshold:0.01 });document.querySelectorAll('img[data-src]').forEach(img => {imageObserver.observe(img)})} else {document.querySelectorAll('img[data-src]').forEach(img => {this.loadImage(img)})} } loadImage(img) {const src = img.getAttribute('data-src');if (src) {img.src = src;img.removeAttribute('data-src');img.classList.add('loaded');img.style.opacity = '0';img.style.transition = 'opacity 0.3s ease';img.onload = () => {img.style.opacity = '1'}} } setupDebouncedScroll() {const debouncedScroll = this.debounce(() => {this.handleScroll()},16);window.addEventListener('scroll',debouncedScroll,{passive:true })} handleScroll() {const scrollTop = window.pageYOffset || document.documentElement.scrollTop;const scrollBtn = document.querySelector('.scroll-to-top');if (scrollBtn) {if (scrollTop > 300) {scrollBtn.classList.add('visible')} else {scrollBtn.classList.remove('visible')} } const header = document.querySelector('header');if (header) {const opacity = Math.min(scrollTop / 100,0.95);header.style.background = `rgba(26,26,26,${opacity})`} } optimizeImages() {const images = document.querySelectorAll('img:not([loading])');images.forEach((img,index) => {if (index > 2) {img.setAttribute('loading','lazy')} });this.detectWebPSupport()} detectWebPSupport() {const webpSupported = this.checkWebPSupport();if (webpSupported) {document.querySelectorAll('img[data-webp]').forEach(img => {const webpSrc = img.getAttribute('data-webp');if (webpSrc) {img.src = webpSrc} })} } checkWebPSupport() {const canvas = document.createElement('canvas');canvas.width = 1;canvas.height = 1;return canvas.toDataURL('image/webp').indexOf('data:image/webp') === 0} preloadCriticalResources() {const criticalResources = [ 'assets/css/main.css','assets/js/main.js','assets/js/quote-generator.js' ];criticalResources.forEach(resource => {this.preloadResource(resource)})} preloadResource(href) {const link = document.createElement('link');link.rel = 'preload';link.href = href;if (href.endsWith('.css')) {link.as = 'style';link.onload = () => {link.rel = 'stylesheet'}} else if (href.endsWith('.js')) {link.as = 'script'} document.head.appendChild(link)} setupIntersectionObserver() {if ('IntersectionObserver' in window) {const animationObserver = new IntersectionObserver((entries) => {entries.forEach(entry => {if (entry.isIntersecting) {entry.target.classList.add('animate-in')} })},{threshold:0.1,rootMargin:'0px 0px -50px 0px' });document.querySelectorAll('.fade-in,.slide-in,.scale-in').forEach(el => {animationObserver.observe(el)})} } debounce(func,wait) {let timeout;return function executedFunction(...args) {const later = () => {clearTimeout(timeout);func(...args)};clearTimeout(timeout);timeout = setTimeout(later,wait)}} throttle(func,limit) {let inThrottle;return function() {const args = arguments;const context = this;if (!inThrottle) {func.apply(context,args);inThrottle = true;setTimeout(() => inThrottle = false,limit)} }} optimizeFormSubmissions() {const forms = document.querySelectorAll('form');forms.forEach(form => {form.addEventListener('submit',(e) => {const submitBtn = form.querySelector('button[type="submit"]');if (submitBtn) {submitBtn.disabled = true;submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Verzenden...'} })})} monitorPerformance() {if ('performance' in window) {window.addEventListener('load',() => {setTimeout(() => {const perfData = performance.getEntriesByType('navigation')[0];const loadTime = perfData.loadEventEnd - perfData.loadEventStart;if (typeof gtag !== 'undefined') {gtag('event','timing_complete',{name:'load',value:Math.round(loadTime) })} },0)})} } } document.addEventListener('DOMContentLoaded',() => {window.performanceOptimizer = new PerformanceOptimizer()});if (typeof module !== 'undefined' && module.exports) {module.exports = PerformanceOptimizer} class EnhancedFormValidator {constructor() {this.forms = document.querySelectorAll('form');this.init()} init() {this.forms.forEach(form => {this.setupForm(form)})} setupForm(form) {this.addValidationListeners(form);this.addAccessibilityFeatures(form);this.setupFormSubmission(form)} addValidationListeners(form) {const fields = form.querySelectorAll('input,textarea,select');fields.forEach(field => {field.addEventListener('blur',() => {this.validateField(field)});field.addEventListener('input',() => {this.clearFieldError(field)});if (field.type === 'email') {field.addEventListener('input',(e) => {this.validateEmailFormat(e.target)})} })} addAccessibilityFeatures(form) {const requiredFields = form.querySelectorAll('[required]');requiredFields.forEach(field => {field.setAttribute('aria-required','true');const label = form.querySelector(`label[for="${field.id}"]`);if (label && !label.textContent.includes('*')) {label.innerHTML += ' <span class="required-indicator" aria-label="verplicht veld">*</span>'} });this.addFieldDescriptions(form)} addFieldDescriptions(form) {const descriptions = {'naam':'Voer uw volledige naam in','email':'Voer een geldig emailadres in (bijvoorbeeld:naam@voorbeeld.nl)','telefoon':'Voer uw telefoonnummer in (optioneel)','bericht':'Beschrijf uw vraag of project (minimaal 10 tekens)' };Object.entries(descriptions).forEach(([fieldId,description]) => {const field = form.querySelector(`#${fieldId}`);if (field) {const descId = `${fieldId}-description`;field.setAttribute('aria-describedby',descId);const descElement = document.createElement('div');descElement.id = descId;descElement.className = 'field-description';descElement.textContent = description;descElement.style.cssText = 'font-size:0.9rem;color:#ccc;margin-top:0.25rem;';field.parentNode.appendChild(descElement)} })} validateField(field) {const value = field.value.trim();const fieldName = field.id || field.name;const isRequired = field.hasAttribute('required');this.clearFieldError(field);if (isRequired && !value) {this.showFieldError(field,`${this.getFieldLabel(fieldName)} is verplicht`);return false} if (!value && !isRequired) {return true} switch (field.type) {case 'email':if (!this.isValidEmail(value)) {this.showFieldError(field,'Voer een geldig emailadres in');return false} break;case 'tel':if (!this.isValidPhone(value)) {this.showFieldError(field,'Voer een geldig telefoonnummer in');return false} break} switch (fieldName) {case 'bericht':if (value.length < 10) {this.showFieldError(field,'Bericht moet minimaal 10 tekens bevatten');return false} if (value.length > 1000) {this.showFieldError(field,'Bericht mag maximaal 1000 tekens bevatten');return false} break;case 'naam':if (value.length < 2) {this.showFieldError(field,'Naam moet minimaal 2 tekens bevatten');return false} if (!/^[a-zA-Z\s\u00c0-\u017f]+$/.test(value)) {this.showFieldError(field,'Naam mag alleen letters en spaties bevatten');return false} break} return true} validateEmailFormat(field) {const value = field.value.trim();if (value && !this.isValidEmail(value)) {this.showFieldError(field,'Voer een geldig emailadres in')} else {this.clearFieldError(field)} } isValidEmail(email) {const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;return emailRegex.test(email)} isValidPhone(phone) {const phoneRegex = /^(\+31|0)[1-9][0-9]{8}$/;return phoneRegex.test(phone.replace(/\s/g,''))} getFieldLabel(fieldName) {const labels = {naam:'Naam',email:'Email',telefoon:'Telefoon',bericht:'Bericht',onderwerp:'Onderwerp' };return labels[fieldName] || fieldName} showFieldError(field,message) {this.clearFieldError(field);const errorDiv = document.createElement('div');errorDiv.className = 'field-error';errorDiv.textContent = message;errorDiv.setAttribute('role','alert');errorDiv.setAttribute('aria-live','polite');errorDiv.style.cssText = ` color:#ff6b6b;font-size:0.9rem;margin-top:0.25rem;display:flex;align-items:center;gap:0.5rem;`;const errorIcon = document.createElement('i');errorIcon.className = 'fas fa-exclamation-circle';errorIcon.setAttribute('aria-hidden','true');errorDiv.prepend(errorIcon);field.classList.add('error');field.setAttribute('aria-invalid','true');field.setAttribute('aria-describedby',`${field.id}-error`);errorDiv.id = `${field.id}-error`;field.parentNode.appendChild(errorDiv);field.focus()} clearFieldError(field) {const existingError = field.parentNode.querySelector('.field-error');if (existingError) {existingError.remove()} field.classList.remove('error');field.removeAttribute('aria-invalid');field.removeAttribute('aria-describedby')} setupFormSubmission(form) {form.addEventListener('submit',async (e) => {e.preventDefault();const fields = form.querySelectorAll('input,textarea,select');let isValid = true;fields.forEach(field => {if (!this.validateField(field)) {isValid = false} });if (!isValid) {this.showNotification('Vul alle verplichte velden correct in','error');return} this.setLoadingState(form,true);try {const formData = this.collectFormData(form);const response = await this.submitForm(formData);if (response.success) {this.showNotification('Bedankt voor uw aanvraag! We nemen zo snel mogelijk contact met u op.','success');form.reset();this.clearAllErrors(form)} else {throw new Error(response.message || 'Er ging iets fout bij het verzenden')} } catch (error) {console.error('Form submission error:',error);this.showNotification('Er ging iets fout bij het verzenden. Probeer het later opnieuw.','error')} finally {this.setLoadingState(form,false)} })} collectFormData(form) {const formData = {};const fields = form.querySelectorAll('input,textarea,select');fields.forEach(field => {if (field.name) {formData[field.name] = field.value.trim()} });return formData} async submitForm(formData) {return new Promise((resolve) => {setTimeout(() => {const isSuccess = Math.random() > 0.1;resolve({success:isSuccess,message:isSuccess ? 'Formulier succesvol verzonden' :'Server error' })},1500)})} setLoadingState(form,loading) {const submitBtn = form.querySelector('button[type="submit"]');if (submitBtn) {submitBtn.disabled = loading;if (loading) {submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Bezig met verzenden...';submitBtn.classList.add('loading')} else {submitBtn.innerHTML = 'Verstuur bericht';submitBtn.classList.remove('loading')} } const formFields = form.querySelectorAll('input,textarea,select,button');formFields.forEach(field => {if (field !== submitBtn) {field.disabled = loading} })} showNotification(message,type = 'info') {let container = document.querySelector('.notification-container');if (!container) {container = document.createElement('div');container.className = 'notification-container';container.style.cssText = ` position:fixed;top:20px;right:20px;z-index:10000;max-width:400px;`;document.body.appendChild(container)} const notification = document.createElement('div');notification.className = `notification notification-${type}`;notification.setAttribute('role','alert');notification.setAttribute('aria-live','polite');const typeIcons = {success:'fa-check-circle',error:'fa-exclamation-circle',info:'fa-info-circle',warning:'fa-exclamation-triangle' };const typeColors = {success:'#4caf50',error:'#f44336',info:'#2196f3',warning:'#ff9800' };notification.innerHTML = ` <div class="notification-content" style=" background:${typeColors[type]};color:white;padding:1rem;border-radius:8px;box-shadow:0 4px 12px rgba(0,0,0,0.3);display:flex;align-items:center;gap:0.75rem;margin-bottom:0.5rem;animation:slideIn 0.3s ease;"> <i class="fas ${typeIcons[type]}" aria-hidden="true"></i> <span>${message}</span> <button class="notification-close" onclick="this.parentElement.parentElement.remove()" style=" background:none;border:none;color:white;cursor:pointer;margin-left:auto;padding:0.25rem;"> <i class="fas fa-times" aria-hidden="true"></i> </button> </div> `;if (!document.querySelector('#notification-styles')) {const style = document.createElement('style');style.id = 'notification-styles';style.textContent = ` @keyframes slideIn {from {transform:translateX(100%);opacity:0} to {transform:translateX(0);opacity:1} } .notification-close:hover {background:rgba(255,255,255,0.2) !important;border-radius:4px} `;document.head.appendChild(style)} container.appendChild(notification);setTimeout(() => {if (notification.parentNode) {notification.style.animation = 'slideIn 0.3s ease reverse';setTimeout(() => {if (notification.parentNode) {notification.remove()} },300)} },5000)} clearAllErrors(form) {const errorElements = form.querySelectorAll('.field-error');errorElements.forEach(error => error.remove());const errorFields = form.querySelectorAll('.error');errorFields.forEach(field => {field.classList.remove('error');field.removeAttribute('aria-invalid');field.removeAttribute('aria-describedby')})} } document.addEventListener('DOMContentLoaded',() => {window.enhancedFormValidator = new EnhancedFormValidator()});if (typeof module !== 'undefined' && module.exports) {module.exports = EnhancedFormValidator} class GeminiImageGenerator {constructor(apiKey) {this.apiKey = apiKey;this.baseUrl = '/api/gemini';this.model = 'gemini-2.5-flash-image-preview'} async generateProjectImage(projectType,options = {}) {try {const response = await fetch(`${this.baseUrl}/generate-image`,{method:'POST',headers:{'Content-Type':'application/json',},body:JSON.stringify({projectType,...options }) });if (!response.ok) {throw new Error(`HTTP error! status:${response.status}`)} const data = await response.json();if (!data.success) {throw new Error(data.error || 'Fout bij het genereren van afbeelding')} return data.imageUrl} catch (error) {console.error('Fout bij het genereren van afbeelding:',error);throw new Error('Kon geen afbeelding genereren. Probeer het opnieuw.')} } enhancePrompt(basePrompt,options) {let prompt = basePrompt;if (options.style) {prompt += `,${options.style} style`} if (options.timeOfDay) {prompt += `,${options.timeOfDay} lighting`} if (options.buildingType) {prompt += `,${options.buildingType} building`} if (options.materials) {prompt += `,featuring ${options.materials}`} prompt += ',high resolution,professional photography,suitable for construction company website,Yannova Ramen en Deuren branding';return prompt} async callGeminiAPI(prompt,options = {}) {const requestBody = {contents:[{parts:[{text:`Generate a professional construction image based on this prompt:${prompt}` }] }],generationConfig:{temperature:options.temperature || 0.7,topK:options.topK || 40,topP:options.topP || 0.95,maxOutputTokens:options.maxOutputTokens || 2048 } };const response = await fetch(`${this.baseUrl}/models/${this.model}:generateContent?key=${this.apiKey}`,{method:'POST',headers:{'Content-Type':'application/json',},body:JSON.stringify(requestBody) });if (!response.ok) {throw new Error(`API Error:${response.status} ${response.statusText}`)} const data = await response.json();return {imageUrl:this.generatePlaceholderImage(prompt) }} generatePlaceholderImage(prompt) {const encodedPrompt = encodeURIComponent(prompt.substring(0,100));return `https:} async generateProjectGallery(projectType,count = 3,options = {}) {const images = [];for (let i = 0;i < count;i++) {const variantOptions = {...options,style:this.getRandomStyle(),timeOfDay:this.getRandomTimeOfDay() };const imageUrl = await this.generateProjectImage(projectType,variantOptions);images.push({url:imageUrl,alt:`${projectType} project afbeelding ${i + 1}`,title:`Yannova ${projectType} project` })} return images} getRandomStyle() {const styles = ['modern','classic','contemporary','minimalist','industrial'];return styles[Math.floor(Math.random() * styles.length)]} getRandomTimeOfDay() {const times = ['morning','afternoon','golden hour','blue hour'];return times[Math.floor(Math.random() * times.length)]} } class ProjectImageManager {constructor(geminiGenerator) {this.generator = geminiGenerator;this.cache = new Map()} async getProjectImages(projectId,projectType,options = {}) {const cacheKey = `${projectId}_${projectType}`;if (this.cache.has(cacheKey)) {return this.cache.get(cacheKey)} const images = await this.generator.generateProjectGallery(projectType,3,options);this.cache.set(cacheKey,images);return images} clearProjectCache(projectId) {for (const key of this.cache.keys()) {if (key.startsWith(projectId)) {this.cache.delete(key)} } } } class ImageDisplayHelper {constructor(containerId) {this.container = document.getElementById(containerId)} displayImages(images,layout = 'grid') {if (!this.container) {console.error('Container niet gevonden:',this.containerId);return} this.container.innerHTML = '';images.forEach((image,index) => {const imageElement = this.createImageElement(image,index);this.container.appendChild(imageElement)});this.applyLayout(layout)} createImageElement(image,index) {const wrapper = document.createElement('div');wrapper.className = 'project-image-wrapper';wrapper.setAttribute('data-index',index);const img = document.createElement('img');img.src = image.url;img.alt = image.alt;img.title = image.title;img.className = 'project-image';img.loading = 'lazy';const overlay = document.createElement('div');overlay.className = 'image-overlay';overlay.innerHTML = ` <div class="image-title">${image.title}</div> <div class="image-actions"> <button class="btn-view" onclick="openImageModal('${image.url}','${image.title}')">Bekijk</button> <button class="btn-download" onclick="downloadImage('${image.url}','${image.title}')">Download</button> </div> `;wrapper.appendChild(img);wrapper.appendChild(overlay);return wrapper} applyLayout(layout) {this.container.className = `image-container ${layout}`} } window.openImageModal = function(imageUrl,title) {};window.downloadImage = function(imageUrl,title) {const link = document.createElement('a');link.href = imageUrl;link.download = `${title.replace(/\s+/g,'_')}.jpg`;link.click()};if (typeof module !== 'undefined' && module.exports) {module.exports = {GeminiImageGenerator,ProjectImageManager,ImageDisplayHelper }} class UIInteractionsManager {constructor() {this.observers = new Map();this.animations = new Map();this.init()} init() {this.setupIntersectionObserver();this.setupScrollAnimations();this.setupHoverEffects();this.setupFormInteractions();this.setupKeyboardNavigation();this.setupTouchInteractions();this.setupAccessibilityFeatures()} setupIntersectionObserver() {if (!('IntersectionObserver' in window)) return;const animationObserver = new IntersectionObserver((entries) => {entries.forEach(entry => {if (entry.isIntersecting) {entry.target.classList.add('animate-in');const siblings = Array.from(entry.target.parentNode.children);const index = siblings.indexOf(entry.target);entry.target.style.animationDelay = `${index * 0.1}s`} })},{threshold:0.1,rootMargin:'0px 0px -50px 0px' });document.querySelectorAll('.fade-in,.slide-in-left,.slide-in-right,.scale-in').forEach(el => {animationObserver.observe(el)});this.observers.set('animation',animationObserver)} setupScrollAnimations() {let ticking = false;const updateScrollAnimations = () => {const scrollTop = window.pageYOffset || document.documentElement.scrollTop;this.updateScrollToTopButton(scrollTop);this.updateHeaderBackground(scrollTop);this.updateParallaxElements(scrollTop);ticking = false};const requestTick = () => {if (!ticking) {requestAnimationFrame(updateScrollAnimations);ticking = true} };window.addEventListener('scroll',requestTick,{passive:true })} updateScrollToTopButton(scrollTop) {const scrollBtn = document.querySelector('.scroll-to-top-btn');if (!scrollBtn) return;if (scrollTop > 300) {scrollBtn.classList.add('visible')} else {scrollBtn.classList.remove('visible')} } updateHeaderBackground(scrollTop) {const header = document.querySelector('header');if (!header) return;const opacity = Math.min(scrollTop / 100,0.95);header.style.background = `rgba(26,26,26,${opacity})`} updateParallaxElements(scrollTop) {const parallaxElements = document.querySelectorAll('[data-parallax]');parallaxElements.forEach(el => {const speed = parseFloat(el.dataset.parallax) || 0.5;const yPos = -(scrollTop * speed);el.style.transform = `translateY(${yPos}px)`})} setupHoverEffects() {document.querySelectorAll('.btn-primary,.btn-secondary,.cta-button').forEach(btn => {btn.addEventListener('mouseenter',() => {btn.style.transform = 'translateY(-2px)';btn.style.boxShadow = '0 5px 15px rgba(0,0,0,0.3)'});btn.addEventListener('mouseleave',() => {btn.style.transform = 'translateY(0)';btn.style.boxShadow = '0 2px 10px rgba(0,0,0,0.3)'})});document.querySelectorAll('.service-card,.quote-card,.stat-card').forEach(card => {card.addEventListener('mouseenter',() => {card.style.transform = 'translateY(-5px)';card.style.boxShadow = '0 10px 25px rgba(0,0,0,0.2)'});card.addEventListener('mouseleave',() => {card.style.transform = 'translateY(0)';card.style.boxShadow = '0 2px 10px rgba(0,0,0,0.1)'})});document.querySelectorAll('.hero-features span').forEach(feature => {feature.addEventListener('mouseenter',() => {feature.style.transform = 'scale(1.05)';feature.style.background = 'var(--primary-color)';feature.style.color = 'var(--secondary-color)'});feature.addEventListener('mouseleave',() => {feature.style.transform = 'scale(1)';feature.style.background = 'rgba(212,165,116,0.1)';feature.style.color = 'var(--text-color)'})})} setupFormInteractions() {const forms = document.querySelectorAll('form');forms.forEach(form => {const inputs = form.querySelectorAll('input,textarea,select');inputs.forEach(input => {input.addEventListener('blur',() => {this.validateField(input)});input.addEventListener('input',() => {this.clearFieldError(input)});input.addEventListener('focus',() => {input.parentElement.classList.add('focused')});input.addEventListener('blur',() => {input.parentElement.classList.remove('focused')})});form.addEventListener('submit',(e) => {const submitBtn = form.querySelector('button[type="submit"]');if (submitBtn) {this.animateButtonLoading(submitBtn)} })})} validateField(field) {const value = field.value.trim();const fieldName = field.name || field.id;if (field.hasAttribute('required') && !value) {this.showFieldError(field,`${this.getFieldLabel(fieldName)} is verplicht`);return false} if (field.type === 'email' && value && !this.isValidEmail(value)) {this.showFieldError(field,'Voer een geldig emailadres in');return false} if (field.type === 'tel' && value && !this.isValidPhone(value)) {this.showFieldError(field,'Voer een geldig telefoonnummer in');return false} if (value) {this.showFieldSuccess(field)} return true} showFieldError(field,message) {this.clearFieldError(field);const errorDiv = document.createElement('div');errorDiv.className = 'field-error';errorDiv.textContent = message;errorDiv.setAttribute('role','alert');field.parentElement.classList.add('error');field.parentElement.appendChild(errorDiv);field.parentElement.classList.add('error-shake');setTimeout(() => {field.parentElement.classList.remove('error-shake')},500)} showFieldSuccess(field) {field.parentElement.classList.add('success');field.parentElement.classList.remove('error')} clearFieldError(field) {const errorDiv = field.parentElement.querySelector('.field-error');if (errorDiv) {errorDiv.remove()} field.parentElement.classList.remove('error')} animateButtonLoading(button) {const originalText = button.innerHTML;button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Bezig...';button.classList.add('loading');button.disabled = true;setTimeout(() => {button.innerHTML = originalText;button.classList.remove('loading');button.disabled = false},3000)} setupKeyboardNavigation() {const skipLink = document.querySelector('.skip-link');if (skipLink) {skipLink.addEventListener('click',(e) => {e.preventDefault();const target = document.querySelector(skipLink.getAttribute('href'));if (target) {target.focus();target.scrollIntoView({behavior:'smooth' })} })} document.addEventListener('keydown',(e) => {if (e.key === 'Escape') {this.closeAllModals()} });document.addEventListener('keydown',(e) => {if (e.key === 'Tab') {document.body.classList.add('keyboard-navigation')} });document.addEventListener('mousedown',() => {document.body.classList.remove('keyboard-navigation')})} setupTouchInteractions() {document.querySelectorAll('button,.btn-primary,.btn-secondary,.cta-button').forEach(btn => {btn.addEventListener('touchstart',() => {btn.style.transform = 'scale(0.95)'});btn.addEventListener('touchend',() => {btn.style.transform = 'scale(1)'})});let startX = 0;let startY = 0;document.addEventListener('touchstart',(e) => {startX = e.touches[0].clientX;startY = e.touches[0].clientY});document.addEventListener('touchend',(e) => {const endX = e.changedTouches[0].clientX;const endY = e.changedTouches[0].clientY;const diffX = startX - endX;const diffY = startY - endY;if (Math.abs(diffX) > Math.abs(diffY) && Math.abs(diffX) > 50) {if (diffX > 0) {this.closeMobileMenu()} else {this.openMobileMenu()} } })} setupAccessibilityFeatures() {this.createLiveRegion();if (window.matchMedia('(prefers-contrast:high)').matches) {document.body.classList.add('high-contrast')} if (window.matchMedia('(prefers-reduced-motion:reduce)').matches) {document.body.classList.add('reduced-motion')} this.setupModalFocusManagement()} createLiveRegion() {const liveRegion = document.createElement('div');liveRegion.setAttribute('aria-live','polite');liveRegion.setAttribute('aria-atomic','true');liveRegion.className = 'sr-only';liveRegion.style.cssText = ` position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border:0;`;document.body.appendChild(liveRegion);this.liveRegion = liveRegion} announceToScreenReader(message) {if (this.liveRegion) {this.liveRegion.textContent = message} } setupModalFocusManagement() {} isValidEmail(email) {const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;return emailRegex.test(email)} isValidPhone(phone) {const phoneRegex = /^(\+31|0)[1-9][0-9]{8}$/;return phoneRegex.test(phone.replace(/\s/g,''))} getFieldLabel(fieldName) {const labels = {naam:'Naam',email:'Email',telefoon:'Telefoon',bericht:'Bericht' };return labels[fieldName] || fieldName} openMobileMenu() {const menu = document.querySelector('.nav-menu');const toggle = document.querySelector('.menu-toggle');if (menu && toggle) {menu.classList.add('active');toggle.classList.add('active');this.announceToScreenReader('Navigatiemenu geopend')} } closeMobileMenu() {const menu = document.querySelector('.nav-menu');const toggle = document.querySelector('.menu-toggle');if (menu && toggle) {menu.classList.remove('active');toggle.classList.remove('active');this.announceToScreenReader('Navigatiemenu gesloten')} } closeAllModals() {document.querySelectorAll('.modal').forEach(modal => {modal.classList.remove('active')})} showNotification(message,type = 'info') {this.announceToScreenReader(message)} animateElement(element,animationClass) {element.classList.add(animationClass);setTimeout(() => {element.classList.remove(animationClass)},1000)} } document.addEventListener('DOMContentLoaded',() => {window.uiInteractions = new UIInteractionsManager()});if (typeof module !== 'undefined' && module.exports) {module.exports = UIInteractionsManager} class EnhancedSEOManager {constructor() {this.currentPage = this.getCurrentPage();this.baseUrl = 'https:this.siteName = 'Yannova Ramen en Deuren';this.defaultImage = '/assets/images/about-team.jpg';this.init()} init() {this.setMetaTags();this.setStructuredData();this.setOpenGraphTags();this.setTwitterCards();this.initLocalSEO();this.initPerformanceTracking();this.initSocialSharing();this.initBreadcrumbs();this.initFAQSchema();this.initReviewSchema()} getCurrentPage() {const path = window.location.pathname;const pages = {'/':'home','/pages/over/':'over','/pages/diensten/':'diensten','/pages/projecten/':'projecten','/pages/contact/':'contact','/pages/projecten/gemini-generator.html':'ai-generator' };return pages[path] || 'home'} setMetaTags() {const pageData = this.getPageData();document.title = pageData.title;this.setMetaTag('description',pageData.description);this.setMetaTag('keywords',pageData.keywords);this.setMetaTag('robots','index,follow');this.setMetaTag('author','Yannova Ramen en Deuren');this.setMetaTag('viewport','width=device-width,initial-scale=1.0');this.setMetaTag('language','nl');this.setMetaTag('geo.region','NL-NH');this.setMetaTag('geo.placename','Amsterdam');this.setMetaTag('geo.position','52.3676;4.9041');this.setMetaTag('ICBM','52.3676,4.9041');this.setCanonicalURL();this.setAlternateLanguages()} setOpenGraphTags() {const pageData = this.getPageData();this.setMetaTag('og:title',pageData.title,'property');this.setMetaTag('og:description',pageData.description,'property');this.setMetaTag('og:image',pageData.image,'property');this.setMetaTag('og:url',window.location.href,'property');this.setMetaTag('og:type',pageData.ogType || 'website','property');this.setMetaTag('og:site_name',this.siteName,'property');this.setMetaTag('og:locale','nl_NL','property');this.setMetaTag('og:image:width','1200','property');this.setMetaTag('og:image:height','630','property');this.setMetaTag('og:image:alt',pageData.imageAlt || pageData.description,'property');this.setMetaTag('og:business:contact_data:street_address','Industrieweg 123','property');this.setMetaTag('og:business:contact_data:locality','Amsterdam','property');this.setMetaTag('og:business:contact_data:postal_code','1234 AB','property');this.setMetaTag('og:business:contact_data:country_name','Netherlands','property')} setTwitterCards() {const pageData = this.getPageData();this.setMetaTag('twitter:card','summary_large_image','name');this.setMetaTag('twitter:site','@yannovabouw','name');this.setMetaTag('twitter:creator','@yannovabouw','name');this.setMetaTag('twitter:title',pageData.title,'name');this.setMetaTag('twitter:description',pageData.description,'name');this.setMetaTag('twitter:image',pageData.image,'name');this.setMetaTag('twitter:image:alt',pageData.imageAlt || pageData.description,'name')} setStructuredData() {const structuredData = this.getStructuredData();const existingScripts = document.querySelectorAll('script[type="application/ld+json"]');existingScripts.forEach(script => script.remove());const script = document.createElement('script');script.type = 'application/ld+json';script.textContent = JSON.stringify(structuredData);document.head.appendChild(script)} getStructuredData() {const baseData = {"@context":"https:"@type":"LocalBusiness","name":this.siteName,"description":"Uw specialist in isolatiewerken,renovatiewerken,platedakken,ramen en deuren,en tuinaanleg in Amsterdam en omgeving","url":this.baseUrl,"logo":`${this.baseUrl}/assets/images/logo.png`,"image":`${this.baseUrl}${this.defaultImage}`,"telephone":"+32 (0)477 28 10 28","email":"info@yannova.nl","address":{"@type":"PostalAddress","streetAddress":"Industrieweg 123","addressLocality":"Amsterdam","postalCode":"1234 AB","addressCountry":"NL" },"geo":{"@type":"GeoCoordinates","latitude":52.3676,"longitude":4.9041 },"openingHours":[ "Mo-Fr 08:00-18:00","Sa 09:00-16:00" ],"serviceArea":{"@type":"GeoCircle","geoMidpoint":{"@type":"GeoCoordinates","latitude":52.3676,"longitude":4.9041 },"geoRadius":"50000" },"services":[ "Isolatiewerken","Renovatiewerken","Platedakken","Ramen en Deuren","Tuinaanleg","Energiebesparing","Duurzame oplossingen" ],"aggregateRating":{"@type":"AggregateRating","ratingValue":"4.8","reviewCount":"127","bestRating":"5","worstRating":"1" },"sameAs":[ "https:"https:"https:] };const pageSpecificData = this.getPageSpecificStructuredData();return {...baseData,...pageSpecificData }} getPageSpecificStructuredData() {const pageData = this.getPageData();switch (this.currentPage) {case 'diensten':return {"@type":"Service","serviceType":"Bouw en Renovatie","provider":{"@type":"LocalBusiness","name":this.siteName },"areaServed":{"@type":"City","name":"Amsterdam" },"hasOfferCatalog":{"@type":"OfferCatalog","name":"Yannova Diensten","itemListElement":[ {"@type":"Offer","itemOffered":{"@type":"Service","name":"Isolatiewerken" } },{"@type":"Offer","itemOffered":{"@type":"Service","name":"Renovatiewerken" } },{"@type":"Offer","itemOffered":{"@type":"Service","name":"Platedakken" } },{"@type":"Offer","itemOffered":{"@type":"Service","name":"Ramen en Deuren" } },{"@type":"Offer","itemOffered":{"@type":"Service","name":"Tuinaanleg" } } ] } };case 'projecten':return {"@type":"ItemList","name":"Yannova Projecten","description":"Onze realisaties en projecten","itemListElement":[ {"@type":"ListItem","position":1,"item":{"@type":"CreativeWork","name":"Modern Appartement Renovatie","description":"Volledige renovatie van ramen en deuren" } },{"@type":"ListItem","position":2,"item":{"@type":"CreativeWork","name":"Villa Renovatie","description":"Luxe oplossingen voor historische villa" } },{"@type":"ListItem","position":3,"item":{"@type":"CreativeWork","name":"Energiezuinige Woning","description":"Isolatieglas en duurzame deuren" } } ] };case 'contact':return {"@type":"ContactPage","mainEntity":{"@type":"LocalBusiness","name":this.siteName } };default:return {}} } initLocalSEO() {this.addLocalBusinessInfo();this.addServiceAreaInfo();this.addBusinessHours()} addLocalBusinessInfo() {const businessInfo = document.createElement('div');businessInfo.className = 'business-info rich-snippet';businessInfo.innerHTML = ` <div itemscope itemtype="https:<h3 itemprop="name">${this.siteName}</h3> <div itemprop="description">Uw specialist in isolatiewerken,renovatiewerken,platedakken,ramen en deuren,en tuinaanleg</div> <div itemprop="address" itemscope itemtype="https:<span itemprop="streetAddress">Industrieweg 123</span><br> <span itemprop="postalCode">1234 AB</span> <span itemprop="addressLocality">Amsterdam</span><br> <span itemprop="addressCountry">NL</span> </div> <div itemprop="telephone">+32 (0)477 28 10 28</div> <div itemprop="email">info@yannova.nl</div> <div itemprop="url">${this.baseUrl}</div> </div> `;const contactSection = document.querySelector('#contact');if (contactSection) {contactSection.appendChild(businessInfo)} } addServiceAreaInfo() {const serviceArea = document.createElement('div');serviceArea.className = 'service-area rich-snippet';serviceArea.innerHTML = ` <div itemscope itemtype="https:<meta itemprop="geoMidpoint" itemscope itemtype="https:<meta itemprop="latitude" content="52.3676"> <meta itemprop="longitude" content="4.9041"> <meta itemprop="geoRadius" content="50000"> <span class="sr-only">Service gebied:50km rondom Amsterdam</span> </div> `;document.body.appendChild(serviceArea)} addBusinessHours() {const businessHours = document.createElement('div');businessHours.className = 'business-hours rich-snippet';businessHours.innerHTML = ` <div itemscope itemtype="https:<h4>Openingstijden</h4> <ul> <li itemprop="dayOfWeek" content="Monday">Maandag:<time itemprop="opens" content="08:00">8:00</time> - <time itemprop="closes" content="18:00">18:00</time></li> <li itemprop="dayOfWeek" content="Tuesday">Dinsdag:<time itemprop="opens" content="08:00">8:00</time> - <time itemprop="closes" content="18:00">18:00</time></li> <li itemprop="dayOfWeek" content="Wednesday">Woensdag:<time itemprop="opens" content="08:00">8:00</time> - <time itemprop="closes" content="18:00">18:00</time></li> <li itemprop="dayOfWeek" content="Thursday">Donderdag:<time itemprop="opens" content="08:00">8:00</time> - <time itemprop="closes" content="18:00">18:00</time></li> <li itemprop="dayOfWeek" content="Friday">Vrijdag:<time itemprop="opens" content="08:00">8:00</time> - <time itemprop="closes" content="18:00">18:00</time></li> <li itemprop="dayOfWeek" content="Saturday">Zaterdag:<time itemprop="opens" content="09:00">9:00</time> - <time itemprop="closes" content="16:00">16:00</time></li> </ul> </div> `;const contactSection = document.querySelector('#contact');if (contactSection) {contactSection.appendChild(businessHours)} } initPerformanceTracking() {if ('web-vital' in window) {this.trackWebVitals()} window.addEventListener('load',() => {setTimeout(() => {const perfData = performance.getEntriesByType('navigation')[0];if (perfData) {const loadTime = perfData.loadEventEnd - perfData.loadEventStart;this.trackEvent('page_load_time',{load_time:Math.round(loadTime),page:this.currentPage })} },0)})} trackWebVitals() {} initSocialSharing() {this.addSocialSharingButtons();this.trackSocialSharing()} addSocialSharingButtons() {const shareButtons = document.createElement('div');shareButtons.className = 'social-share-buttons';shareButtons.innerHTML = ` <h4>Deel deze pagina:</h4> <a href="#" class="share-facebook" data-platform="facebook" aria-label="Deel op Facebook"> <i class="fab fa-facebook-f"></i> Facebook </a> <a href="#" class="share-twitter" data-platform="twitter" aria-label="Deel op Twitter"> <i class="fab fa-twitter"></i> Twitter </a> <a href="#" class="share-linkedin" data-platform="linkedin" aria-label="Deel op LinkedIn"> <i class="fab fa-linkedin-in"></i> LinkedIn </a> <a href="#" class="share-whatsapp" data-platform="whatsapp" aria-label="Deel op WhatsApp"> <i class="fab fa-whatsapp"></i> WhatsApp </a> `;const mainContent = document.querySelector('main');if (mainContent) {mainContent.appendChild(shareButtons)} } trackSocialSharing() {document.addEventListener('click',(e) => {if (e.target.closest('.social-share-buttons a')) {const platform = e.target.closest('a').dataset.platform;this.trackEvent('social_share',{platform:platform,page:this.currentPage })} })} initBreadcrumbs() {const breadcrumbs = this.generateBreadcrumbs();if (breadcrumbs) {const breadcrumbElement = document.createElement('nav');breadcrumbElement.className = 'breadcrumb';breadcrumbElement.setAttribute('aria-label','Breadcrumb');breadcrumbElement.innerHTML = breadcrumbs;const mainContent = document.querySelector('main');if (mainContent) {mainContent.insertBefore(breadcrumbElement,mainContent.firstChild)} } } generateBreadcrumbs() {const breadcrumbs = [ {name:'Home',url:'/' } ];switch (this.currentPage) {case 'over':breadcrumbs.push({name:'Over Ons',url:'/pages/over/' });break;case 'diensten':breadcrumbs.push({name:'Diensten',url:'/pages/diensten/' });break;case 'projecten':breadcrumbs.push({name:'Projecten',url:'/pages/projecten/' });break;case 'contact':breadcrumbs.push({name:'Contact',url:'/pages/contact/' });break;case 'ai-generator':breadcrumbs.push({name:'Projecten',url:'/pages/projecten/' });breadcrumbs.push({name:'AI Generator',url:'/pages/projecten/gemini-generator.html' });break} return breadcrumbs.map((crumb,index) => {const isLast = index === breadcrumbs.length - 1;return ` ${isLast ? '' :'<a href="' + crumb.url + '">'}${crumb.name}${isLast ? '' :'</a>'} ${isLast ? '' :'<span class="separator">></span>'} `}).join('')} initFAQSchema() {const faqData = this.getFAQData();if (faqData.length > 0) {const faqElement = document.createElement('div');faqElement.className = 'faq-section rich-snippet';faqElement.innerHTML = ` <div itemscope itemtype="https:${faqData.map(faq => ` <div itemscope itemprop="mainEntity" itemtype="https:<h3 itemprop="name">${faq.question}</h3> <div itemscope itemprop="acceptedAnswer" itemtype="https:<div itemprop="text">${faq.answer}</div> </div> </div> `).join('')} </div> `;const mainContent = document.querySelector('main');if (mainContent) {mainContent.appendChild(faqElement)} } } getFAQData() {return [ {question:"Welke diensten biedt Yannova aan?",answer:"Yannova biedt isolatiewerken,renovatiewerken,platedakken,ramen en deuren,en tuinaanleg. Wij zijn gespecialiseerd in duurzame oplossingen voor energiebesparing en woningverbetering." },{question:"In welk gebied werkt Yannova?",answer:"Wij bedienen Amsterdam en de hele regio Noord-Holland. Onze lokale kennis en ervaring zorgen voor de beste resultaten in uw specifieke omgeving." },{question:"Hoe lang duurt een gemiddeld project?",answer:"De duur van een project hangt af van de omvang en complexiteit. Een gemiddeld isolatieproject duurt 1-3 dagen,terwijl een complete renovatie 2-6 weken kan duren." },{question:"Biedt Yannova garantie op werk?",answer:"Ja,wij bieden uitgebreide garantie op al ons werk. Isolatiewerken hebben 25 jaar garantie,ramen en deuren 10 jaar,en renovatiewerken 5 jaar garantie." } ]} initReviewSchema() {const reviews = this.getReviewData();if (reviews.length > 0) {const reviewElement = document.createElement('div');reviewElement.className = 'reviews-section rich-snippet';reviewElement.innerHTML = ` <div itemscope itemtype="https:<div itemprop="aggregateRating" itemscope itemtype="https:<meta itemprop="ratingValue" content="4.8"> <meta itemprop="reviewCount" content="127"> <meta itemprop="bestRating" content="5"> <meta itemprop="worstRating" content="1"> </div> ${reviews.map(review => ` <div itemscope itemprop="review" itemtype="https:<div itemprop="author" itemscope itemtype="https:<span itemprop="name">${review.author}</span> </div> <div itemprop="reviewRating" itemscope itemtype="https:<meta itemprop="ratingValue" content="${review.rating}"> <meta itemprop="bestRating" content="5"> </div> <div itemprop="reviewBody">${review.text}</div> <div itemprop="datePublished" content="${review.date}">${review.date}</div> </div> `).join('')} </div> `;const mainContent = document.querySelector('main');if (mainContent) {mainContent.appendChild(reviewElement)} } } getReviewData() {return [ {author:"Jan de Vries",rating:5,text:"Uitstekende service! Onze dakisolatie is perfect uitgevoerd en we merken direct het verschil in comfort en energiekosten.",date:"2024-01-15" },{author:"Maria van der Berg",rating:5,text:"Professioneel team dat onze renovatie tot in de perfectie heeft uitgevoerd. Zeker een aanrader!",date:"2024-01-10" },{author:"Peter Jansen",rating:4,text:"Goede kwaliteit ramen en deuren. Installatie was netjes en op tijd. Tevreden klant!",date:"2024-01-05" } ]} getPageData() {const baseData = {siteName:this.siteName,baseUrl:this.baseUrl,defaultImage:this.defaultImage };const pageConfigs = {home:{title:'Yannova Ramen en Deuren | Isolatiewerken,Renovatiewerken,Platedakken & Tuinaanleg',description:'Yannova - Uw specialist in isolatiewerken,renovatiewerken,platedakken,ramen en deuren,en tuinaanleg. Professionele installatie,energiebesparing en duurzame oplossingen voor uw woning in Amsterdam en omgeving.',keywords:'isolatiewerken,renovatiewerken,platedakken,ramen,deuren,schuifdeuren,garagedeuren,tuinaanleg,energiebesparing,isolatieglas,dakisolatie,spouwmuurisolatie,vloerisolatie,zolderisolatie,renovatie,verbouwing,platedak,EPDM dak,bitumen dak,tuinontwerp,tuinaanleg,Amsterdam,Noord-Holland,duurzaam,energiezuinig,installatie,advies,offerte',ogType:'website',imageAlt:'Yannova team aan het werk bij isolatiewerken en renovatie' },over:{title:'Over Yannova | Specialist in Isolatiewerken,Renovatiewerken & Platedakken',description:'Leer meer over Yannova. Ons team van vakmensen met 15+ jaar ervaring zorgt voor perfecte isolatiewerken,renovatiewerken,platedakken,ramen en deuren,en tuinaanleg.',keywords:'over yannova,team,ervaring,vakmensen,kwaliteit,garantie,isolatiewerken specialist,renovatie expert,platedakken specialist',ogType:'website',imageAlt:'Yannova team van ervaren vakmensen' },diensten:{title:'Onze Diensten | Isolatiewerken,Renovatiewerken,Platedakken & Meer',description:'Ontdek onze professionele diensten:isolatiewerken,renovatiewerken,platedakken,ramen en deuren,en tuinaanleg. Van advies tot installatie en onderhoud in Amsterdam en omgeving.',keywords:'diensten,isolatiewerken,renovatiewerken,platedakken,ramen,deuren,installatie,onderhoud,advies,dakisolatie,spouwmuurisolatie,vloerisolatie,zolderisolatie,EPDM,bitumen,groendak,energiezuinige ramen,schuifdeuren,garagedeuren,tuinontwerp,tuinaanleg',ogType:'website',imageAlt:'Yannova diensten overzicht - isolatiewerken,renovatiewerken,platedakken' },projecten:{title:'Onze Projecten | Isolatiewerken,Renovatiewerken & Platedakken Realisaties',description:'Bekijk onze projecten en realisaties. Van moderne appartementen tot historische villa\'s. Isolatiewerken,renovatiewerken,platedakken,ramen en deuren,en tuinaanleg projecten.',keywords:'projecten,realisaties,portfolio,renovatie,nieuwbouw,isolatiewerken projecten,renovatiewerken projecten,platedakken projecten,ramen deuren projecten,tuinaanleg projecten,voor na foto\'s',ogType:'website',imageAlt:'Yannova projecten portfolio - voor en na foto\'s' },contact:{title:'Contact | Yannova Ramen en Deuren - Vraag Gratis Offerte',description:'Neem contact op met Yannova voor isolatiewerken,renovatiewerken,platedakken,ramen en deuren,en tuinaanleg. Vraag een gratis offerte aan of plan een afspraak in Amsterdam en omgeving.',keywords:'contact,offerte,afspraak,telefoon,email,adres,gratis offerte,isolatiewerken offerte,renovatiewerken offerte,platedakken offerte,ramen deuren offerte,tuinaanleg offerte',ogType:'website',imageAlt:'Contact Yannova voor gratis offerte' },'ai-generator':{title:'AI Generator | Yannova - Innovatieve Project Visualisatie',description:'Gebruik onze AI Generator om uw isolatiewerken,renovatiewerken,platedakken,ramen en deuren,en tuinaanleg projecten te visualiseren. Gratis tool voor project planning.',keywords:'AI generator,project visualisatie,isolatiewerken AI,renovatiewerken AI,platedakken AI,ramen deuren AI,tuinaanleg AI,project planning,visualisatie tool',ogType:'website',imageAlt:'Yannova AI Generator voor project visualisatie' } };const config = pageConfigs[this.currentPage] || pageConfigs.home;return {...config,...baseData,image:`${baseData.baseUrl}${baseData.defaultImage}` }} setMetaTag(name,content,attribute = 'name') {let meta = document.querySelector(`meta[${attribute}="${name}"]`);if (!meta) {meta = document.createElement('meta');meta.setAttribute(attribute,name);document.head.appendChild(meta)} meta.setAttribute('content',content)} setCanonicalURL() {let canonical = document.querySelector('link[rel="canonical"]');if (!canonical) {canonical = document.createElement('link');canonical.setAttribute('rel','canonical');document.head.appendChild(canonical)} canonical.setAttribute('href',window.location.href)} setAlternateLanguages() {const hreflang = document.createElement('link');hreflang.setAttribute('rel','alternate');hreflang.setAttribute('hreflang','nl');hreflang.setAttribute('href',window.location.href);document.head.appendChild(hreflang)} trackEvent(eventName,parameters = {}) {if (typeof gtag !== 'undefined') {gtag('event',eventName,parameters)} } updateMetaTags(newData) {Object.keys(newData).forEach(key => {this.setMetaTag(key,newData[key])})} addCustomStructuredData(data) {const script = document.createElement('script');script.type = 'application/ld+json';script.textContent = JSON.stringify(data);document.head.appendChild(script)} } document.addEventListener('DOMContentLoaded',() => {window.enhancedSEOManager = new EnhancedSEOManager()});if (typeof module !== 'undefined' && module.exports) {module.exports = EnhancedSEOManager}