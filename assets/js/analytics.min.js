class YannovaAnalytics {constructor() {this.apiBaseUrl = window.location.origin + '/api';this.sessionId = this.generateSessionId();this.startTime = Date.now();this.pageViews = 0;this.events = [];this.init()} init() {this.trackPageView();this.setupEventListeners();this.startPerformanceMonitoring();this.trackUserBehavior()} generateSessionId() {return 'analytics_' + Date.now() + '_' + Math.random().toString(36).substr(2,9)} trackPageView() {this.pageViews++;const pageData = {url:window.location.href,title:document.title,referrer:document.referrer,timestamp:new Date().toISOString(),sessionId:this.sessionId,userAgent:navigator.userAgent,viewport:{width:window.innerWidth,height:window.innerHeight } };this.sendEvent('page_view',pageData)} setupEventListeners() {document.addEventListener('click',(e) => {const target = e.target;const elementData = {tagName:target.tagName,className:target.className,id:target.id,text:target.textContent?.substring(0,100),href:target.href,timestamp:new Date().toISOString() };if (target.matches('.btn-primary,.btn-submit,.quick-action-btn')) {this.sendEvent('button_click',elementData)} else if (target.matches('a[href^="#"]')) {this.sendEvent('internal_link_click',elementData)} else if (target.matches('a[href^="http"]')) {this.sendEvent('external_link_click',elementData)} });document.addEventListener('submit',(e) => {const formData = {formId:e.target.id,formClass:e.target.className,action:e.target.action,method:e.target.method,timestamp:new Date().toISOString() };this.sendEvent('form_submit',formData)});let maxScrollDepth = 0;window.addEventListener('scroll',() => {const scrollDepth = Math.round((window.scrollY / (document.body.scrollHeight - window.innerHeight)) * 100);if (scrollDepth > maxScrollDepth) {maxScrollDepth = scrollDepth;this.sendEvent('scroll_depth',{depth:maxScrollDepth })} });window.addEventListener('beforeunload',() => {const timeOnPage = Date.now() - this.startTime;this.sendEvent('time_on_page',{duration:timeOnPage })})} startPerformanceMonitoring() {if ('PerformanceObserver' in window) {new PerformanceObserver((entryList) => {const entries = entryList.getEntries();const lastEntry = entries[entries.length - 1];this.sendEvent('lcp',{value:lastEntry.startTime })}).observe({entryTypes:['largest-contentful-paint'] });new PerformanceObserver((entryList) => {const entries = entryList.getEntries();entries.forEach(entry => {this.sendEvent('fid',{value:entry.processingStart - entry.startTime })})}).observe({entryTypes:['first-input'] });let clsValue = 0;new PerformanceObserver((entryList) => {const entries = entryList.getEntries();entries.forEach(entry => {if (!entry.hadRecentInput) {clsValue += entry.value} });this.sendEvent('cls',{value:clsValue })}).observe({entryTypes:['layout-shift'] })} window.addEventListener('load',() => {setTimeout(() => {const perfData = performance.getEntriesByType('navigation')[0];const loadTime = perfData.loadEventEnd - perfData.loadEventStart;this.sendEvent('page_load_time',{value:loadTime })},0)})} trackUserBehavior() {let mouseMovements = 0;document.addEventListener('mousemove',() => {mouseMovements++});let keystrokes = 0;document.addEventListener('keydown',() => {keystrokes++});setInterval(() => {this.sendEvent('user_behavior',{mouseMovements:mouseMovements,keystrokes:keystrokes,sessionDuration:Date.now() - this.startTime });mouseMovements = 0;keystrokes = 0},30000)} trackChatbotInteraction(action,data = {}) {this.sendEvent('chatbot_interaction',{action:action,...data,timestamp:new Date().toISOString() })} trackQuoteGeneration(data) {this.sendEvent('quote_generation',{...data,timestamp:new Date().toISOString() })} async sendEvent(eventType,eventData) {const event = {type:eventType,data:eventData,sessionId:this.sessionId,timestamp:new Date().toISOString(),url:window.location.href,userAgent:navigator.userAgent };this.events.push(event);try {await fetch(`${this.apiBaseUrl}/analytics/event`,{method:'POST',headers:{'Content-Type':'application/json',},body:JSON.stringify(event) })} catch (error) {this.storeEventLocally(event)} } storeEventLocally(event) {try {const storedEvents = JSON.parse(localStorage.getItem('yannova_analytics_events') || '[]');storedEvents.push(event);localStorage.setItem('yannova_analytics_events',JSON.stringify(storedEvents))} catch (error) {} } async retryStoredEvents() {try {const storedEvents = JSON.parse(localStorage.getItem('yannova_analytics_events') || '[]');if (storedEvents.length > 0) {for (const event of storedEvents) {await fetch(`${this.apiBaseUrl}/analytics/event`,{method:'POST',headers:{'Content-Type':'application/json',},body:JSON.stringify(event) })} localStorage.removeItem('yannova_analytics_events')} } catch (error) {} } trackCustomEvent(eventName,eventData) {this.sendEvent(eventName,eventData)} getSessionStats() {return {sessionId:this.sessionId,pageViews:this.pageViews,sessionDuration:Date.now() - this.startTime,eventsCount:this.events.length }} } document.addEventListener('DOMContentLoaded',() => {window.yannovaAnalytics = new YannovaAnalytics();window.yannovaAnalytics.retryStoredEvents()});if (typeof module !== 'undefined' && module.exports) {module.exports = YannovaAnalytics} class SEOManager {constructor() {this.currentPage = this.getCurrentPage();this.init()} init() {this.setMetaTags();this.setStructuredData();this.initGoogleAnalytics();this.trackPerformance()} getCurrentPage() {const path = window.location.pathname;const pages = {'/':'home','/pages/over/':'over','/pages/diensten/':'diensten','/pages/projecten/':'projecten','/pages/contact/':'contact' };return pages[path] || 'home'} setMetaTags() {const pageData = this.getPageData();document.title = pageData.title;this.setMetaTag('description',pageData.description);this.setMetaTag('keywords',pageData.keywords);this.setMetaTag('og:title',pageData.title,'property');this.setMetaTag('og:description',pageData.description,'property');this.setMetaTag('og:image',pageData.image,'property');this.setMetaTag('og:url',window.location.href,'property');this.setMetaTag('og:type','website','property');this.setMetaTag('twitter:card','summary_large_image','name');this.setMetaTag('twitter:title',pageData.title,'name');this.setMetaTag('twitter:description',pageData.description,'name');this.setMetaTag('twitter:image',pageData.image,'name');this.setCanonicalURL()} getPageData() {const baseData = {siteName:'Yannova Ramen en Deuren',baseUrl:'https:defaultImage:'/assets/images/hero-bg.jpg' };const pageConfigs = {home:{title:'Yannova Ramen en Deuren | Professionele Ramen en Deuren',description:'Yannova Ramen en Deuren - Uw specialist in hoogwaardige ramen en deuren. Professionele installatie en advies voor uw woning.',keywords:'ramen,deuren,schuifdeuren,garagedeuren,installatie,renovatie,isolatieglas,Amsterdam' },over:{title:'Over Yannova | Ramen en Deuren Specialist',description:'Leer meer over Yannova Ramen en Deuren. Ons team van vakmensen zorgt voor perfecte installatie en langdurige prestaties.',keywords:'over yannova,team,ervaring,vakmensen,kwaliteit,garantie' },diensten:{title:'Onze Diensten | Ramen en Deuren',description:'Ontdek onze professionele diensten voor ramen en deuren. Van advies tot installatie en onderhoud.',keywords:'diensten,ramen,deuren,installatie,onderhoud,advies' },projecten:{title:'Onze Projecten | Ramen en Deuren Realisaties',description:'Bekijk onze projecten en realisaties. Van moderne appartementen tot historische villa\'s.',keywords:'projecten,realisaties,portfolio,renovatie,nieuwbouw' },contact:{title:'Contact | Yannova Ramen en Deuren',description:'Neem contact op met Yannova Ramen en Deuren. Vraag een offerte aan of plan een afspraak.',keywords:'contact,offerte,afspraak,telefoon,email,adres' } };const config = pageConfigs[this.currentPage] || pageConfigs.home;return {...config,...baseData,image:`${baseData.baseUrl}${baseData.defaultImage}` }} setMetaTag(name,content,attribute = 'name') {let meta = document.querySelector(`meta[${attribute}="${name}"]`);if (!meta) {meta = document.createElement('meta');meta.setAttribute(attribute,name);document.head.appendChild(meta)} meta.setAttribute('content',content)} setCanonicalURL() {let canonical = document.querySelector('link[rel="canonical"]');if (!canonical) {canonical = document.createElement('link');canonical.setAttribute('rel','canonical');document.head.appendChild(canonical)} canonical.setAttribute('href',window.location.href)} setStructuredData() {const structuredData = {"@context":"https:"@type":"LocalBusiness","name":"Yannova Ramen en Deuren","description":"Specialist in hoogwaardige ramen en deuren","url":"https:"telephone":"+32 (0)477 28 10 28","email":"info@yannova.nl","address":{"@type":"PostalAddress","streetAddress":"Industrieweg 123","addressLocality":"Amsterdam","postalCode":"1234 AB","addressCountry":"NL" },"openingHours":[ "Mo-Fr 08:00-18:00","Sa 09:00-16:00" ],"serviceArea":{"@type":"GeoCircle","geoMidpoint":{"@type":"GeoCoordinates","latitude":"52.3676","longitude":"4.9041" },"geoRadius":"50000" },"services":[ "Ramen installatie","Deuren installatie","Schuifdeuren","Garagedeuren","Renovatie","Onderhoud" ],"aggregateRating":{"@type":"AggregateRating","ratingValue":"4.8","reviewCount":"127" } };const existingScript = document.querySelector('script[type="application/ld+json"]');if (existingScript) {existingScript.remove()} const script = document.createElement('script');script.type = 'application/ld+json';script.textContent = JSON.stringify(structuredData);document.head.appendChild(script)} initGoogleAnalytics() {const GA_TRACKING_ID = 'G-XXXXXXXXXX';const script = document.createElement('script');script.async = true;script.src = `https:document.head.appendChild(script);window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments)} gtag('js',new Date());gtag('config',GA_TRACKING_ID);gtag('event','page_view',{page_title:document.title,page_location:window.location.href })} trackPerformance() {if ('performance' in window) {window.addEventListener('load',() => {setTimeout(() => {const perfData = performance.getEntriesByType('navigation')[0];const loadTime = perfData.loadEventEnd - perfData.loadEventStart;if (typeof gtag !== 'undefined') {gtag('event','timing_complete',{name:'load',value:Math.round(loadTime) })} },0)})} } updateMetaTags(newData) {Object.keys(newData).forEach(key => {this.setMetaTag(key,newData[key])})} trackEvent(eventName,parameters = {}) {if (typeof gtag !== 'undefined') {gtag('event',eventName,parameters)} } } document.addEventListener('DOMContentLoaded',() => {window.seoManager = new SEOManager()});if (typeof module !== 'undefined' && module.exports) {module.exports = SEOManager} class EnhancedSEOManager {constructor() {this.currentPage = this.getCurrentPage();this.baseUrl = 'https:this.siteName = 'Yannova Ramen en Deuren';this.defaultImage = '/assets/images/about-team.jpg';this.init()} init() {this.setMetaTags();this.setStructuredData();this.setOpenGraphTags();this.setTwitterCards();this.initLocalSEO();this.initPerformanceTracking();this.initSocialSharing();this.initBreadcrumbs();this.initFAQSchema();this.initReviewSchema()} getCurrentPage() {const path = window.location.pathname;const pages = {'/':'home','/pages/over/':'over','/pages/diensten/':'diensten','/pages/projecten/':'projecten','/pages/contact/':'contact','/pages/projecten/gemini-generator.html':'ai-generator' };return pages[path] || 'home'} setMetaTags() {const pageData = this.getPageData();document.title = pageData.title;this.setMetaTag('description',pageData.description);this.setMetaTag('keywords',pageData.keywords);this.setMetaTag('robots','index,follow');this.setMetaTag('author','Yannova Ramen en Deuren');this.setMetaTag('viewport','width=device-width,initial-scale=1.0');this.setMetaTag('language','nl');this.setMetaTag('geo.region','NL-NH');this.setMetaTag('geo.placename','Amsterdam');this.setMetaTag('geo.position','52.3676;4.9041');this.setMetaTag('ICBM','52.3676,4.9041');this.setCanonicalURL();this.setAlternateLanguages()} setOpenGraphTags() {const pageData = this.getPageData();this.setMetaTag('og:title',pageData.title,'property');this.setMetaTag('og:description',pageData.description,'property');this.setMetaTag('og:image',pageData.image,'property');this.setMetaTag('og:url',window.location.href,'property');this.setMetaTag('og:type',pageData.ogType || 'website','property');this.setMetaTag('og:site_name',this.siteName,'property');this.setMetaTag('og:locale','nl_NL','property');this.setMetaTag('og:image:width','1200','property');this.setMetaTag('og:image:height','630','property');this.setMetaTag('og:image:alt',pageData.imageAlt || pageData.description,'property');this.setMetaTag('og:business:contact_data:street_address','Industrieweg 123','property');this.setMetaTag('og:business:contact_data:locality','Amsterdam','property');this.setMetaTag('og:business:contact_data:postal_code','1234 AB','property');this.setMetaTag('og:business:contact_data:country_name','Netherlands','property')} setTwitterCards() {const pageData = this.getPageData();this.setMetaTag('twitter:card','summary_large_image','name');this.setMetaTag('twitter:site','@yannovabouw','name');this.setMetaTag('twitter:creator','@yannovabouw','name');this.setMetaTag('twitter:title',pageData.title,'name');this.setMetaTag('twitter:description',pageData.description,'name');this.setMetaTag('twitter:image',pageData.image,'name');this.setMetaTag('twitter:image:alt',pageData.imageAlt || pageData.description,'name')} setStructuredData() {const structuredData = this.getStructuredData();const existingScripts = document.querySelectorAll('script[type="application/ld+json"]');existingScripts.forEach(script => script.remove());const script = document.createElement('script');script.type = 'application/ld+json';script.textContent = JSON.stringify(structuredData);document.head.appendChild(script)} getStructuredData() {const baseData = {"@context":"https:"@type":"LocalBusiness","name":this.siteName,"description":"Uw specialist in isolatiewerken,renovatiewerken,platedakken,ramen en deuren,en tuinaanleg in Amsterdam en omgeving","url":this.baseUrl,"logo":`${this.baseUrl}/assets/images/logo.png`,"image":`${this.baseUrl}${this.defaultImage}`,"telephone":"+32 (0)477 28 10 28","email":"info@yannova.nl","address":{"@type":"PostalAddress","streetAddress":"Industrieweg 123","addressLocality":"Amsterdam","postalCode":"1234 AB","addressCountry":"NL" },"geo":{"@type":"GeoCoordinates","latitude":52.3676,"longitude":4.9041 },"openingHours":[ "Mo-Fr 08:00-18:00","Sa 09:00-16:00" ],"serviceArea":{"@type":"GeoCircle","geoMidpoint":{"@type":"GeoCoordinates","latitude":52.3676,"longitude":4.9041 },"geoRadius":"50000" },"services":[ "Isolatiewerken","Renovatiewerken","Platedakken","Ramen en Deuren","Tuinaanleg","Energiebesparing","Duurzame oplossingen" ],"aggregateRating":{"@type":"AggregateRating","ratingValue":"4.8","reviewCount":"127","bestRating":"5","worstRating":"1" },"sameAs":[ "https:"https:"https:] };const pageSpecificData = this.getPageSpecificStructuredData();return {...baseData,...pageSpecificData }} getPageSpecificStructuredData() {const pageData = this.getPageData();switch (this.currentPage) {case 'diensten':return {"@type":"Service","serviceType":"Bouw en Renovatie","provider":{"@type":"LocalBusiness","name":this.siteName },"areaServed":{"@type":"City","name":"Amsterdam" },"hasOfferCatalog":{"@type":"OfferCatalog","name":"Yannova Diensten","itemListElement":[ {"@type":"Offer","itemOffered":{"@type":"Service","name":"Isolatiewerken" } },{"@type":"Offer","itemOffered":{"@type":"Service","name":"Renovatiewerken" } },{"@type":"Offer","itemOffered":{"@type":"Service","name":"Platedakken" } },{"@type":"Offer","itemOffered":{"@type":"Service","name":"Ramen en Deuren" } },{"@type":"Offer","itemOffered":{"@type":"Service","name":"Tuinaanleg" } } ] } };case 'projecten':return {"@type":"ItemList","name":"Yannova Projecten","description":"Onze realisaties en projecten","itemListElement":[ {"@type":"ListItem","position":1,"item":{"@type":"CreativeWork","name":"Modern Appartement Renovatie","description":"Volledige renovatie van ramen en deuren" } },{"@type":"ListItem","position":2,"item":{"@type":"CreativeWork","name":"Villa Renovatie","description":"Luxe oplossingen voor historische villa" } },{"@type":"ListItem","position":3,"item":{"@type":"CreativeWork","name":"Energiezuinige Woning","description":"Isolatieglas en duurzame deuren" } } ] };case 'contact':return {"@type":"ContactPage","mainEntity":{"@type":"LocalBusiness","name":this.siteName } };default:return {}} } initLocalSEO() {this.addLocalBusinessInfo();this.addServiceAreaInfo();this.addBusinessHours()} addLocalBusinessInfo() {const businessInfo = document.createElement('div');businessInfo.className = 'business-info rich-snippet';businessInfo.innerHTML = ` <div itemscope itemtype="https:<h3 itemprop="name">${this.siteName}</h3> <div itemprop="description">Uw specialist in isolatiewerken,renovatiewerken,platedakken,ramen en deuren,en tuinaanleg</div> <div itemprop="address" itemscope itemtype="https:<span itemprop="streetAddress">Industrieweg 123</span><br> <span itemprop="postalCode">1234 AB</span> <span itemprop="addressLocality">Amsterdam</span><br> <span itemprop="addressCountry">NL</span> </div> <div itemprop="telephone">+32 (0)477 28 10 28</div> <div itemprop="email">info@yannova.nl</div> <div itemprop="url">${this.baseUrl}</div> </div> `;const contactSection = document.querySelector('#contact');if (contactSection) {contactSection.appendChild(businessInfo)} } addServiceAreaInfo() {const serviceArea = document.createElement('div');serviceArea.className = 'service-area rich-snippet';serviceArea.innerHTML = ` <div itemscope itemtype="https:<meta itemprop="geoMidpoint" itemscope itemtype="https:<meta itemprop="latitude" content="52.3676"> <meta itemprop="longitude" content="4.9041"> <meta itemprop="geoRadius" content="50000"> <span class="sr-only">Service gebied:50km rondom Amsterdam</span> </div> `;document.body.appendChild(serviceArea)} addBusinessHours() {const businessHours = document.createElement('div');businessHours.className = 'business-hours rich-snippet';businessHours.innerHTML = ` <div itemscope itemtype="https:<h4>Openingstijden</h4> <ul> <li itemprop="dayOfWeek" content="Monday">Maandag:<time itemprop="opens" content="08:00">8:00</time> - <time itemprop="closes" content="18:00">18:00</time></li> <li itemprop="dayOfWeek" content="Tuesday">Dinsdag:<time itemprop="opens" content="08:00">8:00</time> - <time itemprop="closes" content="18:00">18:00</time></li> <li itemprop="dayOfWeek" content="Wednesday">Woensdag:<time itemprop="opens" content="08:00">8:00</time> - <time itemprop="closes" content="18:00">18:00</time></li> <li itemprop="dayOfWeek" content="Thursday">Donderdag:<time itemprop="opens" content="08:00">8:00</time> - <time itemprop="closes" content="18:00">18:00</time></li> <li itemprop="dayOfWeek" content="Friday">Vrijdag:<time itemprop="opens" content="08:00">8:00</time> - <time itemprop="closes" content="18:00">18:00</time></li> <li itemprop="dayOfWeek" content="Saturday">Zaterdag:<time itemprop="opens" content="09:00">9:00</time> - <time itemprop="closes" content="16:00">16:00</time></li> </ul> </div> `;const contactSection = document.querySelector('#contact');if (contactSection) {contactSection.appendChild(businessHours)} } initPerformanceTracking() {if ('web-vital' in window) {this.trackWebVitals()} window.addEventListener('load',() => {setTimeout(() => {const perfData = performance.getEntriesByType('navigation')[0];if (perfData) {const loadTime = perfData.loadEventEnd - perfData.loadEventStart;this.trackEvent('page_load_time',{load_time:Math.round(loadTime),page:this.currentPage })} },0)})} trackWebVitals() {} initSocialSharing() {this.addSocialSharingButtons();this.trackSocialSharing()} addSocialSharingButtons() {const shareButtons = document.createElement('div');shareButtons.className = 'social-share-buttons';shareButtons.innerHTML = ` <h4>Deel deze pagina:</h4> <a href="#" class="share-facebook" data-platform="facebook" aria-label="Deel op Facebook"> <i class="fab fa-facebook-f"></i> Facebook </a> <a href="#" class="share-twitter" data-platform="twitter" aria-label="Deel op Twitter"> <i class="fab fa-twitter"></i> Twitter </a> <a href="#" class="share-linkedin" data-platform="linkedin" aria-label="Deel op LinkedIn"> <i class="fab fa-linkedin-in"></i> LinkedIn </a> <a href="#" class="share-whatsapp" data-platform="whatsapp" aria-label="Deel op WhatsApp"> <i class="fab fa-whatsapp"></i> WhatsApp </a> `;const mainContent = document.querySelector('main');if (mainContent) {mainContent.appendChild(shareButtons)} } trackSocialSharing() {document.addEventListener('click',(e) => {if (e.target.closest('.social-share-buttons a')) {const platform = e.target.closest('a').dataset.platform;this.trackEvent('social_share',{platform:platform,page:this.currentPage })} })} initBreadcrumbs() {const breadcrumbs = this.generateBreadcrumbs();if (breadcrumbs) {const breadcrumbElement = document.createElement('nav');breadcrumbElement.className = 'breadcrumb';breadcrumbElement.setAttribute('aria-label','Breadcrumb');breadcrumbElement.innerHTML = breadcrumbs;const mainContent = document.querySelector('main');if (mainContent) {mainContent.insertBefore(breadcrumbElement,mainContent.firstChild)} } } generateBreadcrumbs() {const breadcrumbs = [ {name:'Home',url:'/' } ];switch (this.currentPage) {case 'over':breadcrumbs.push({name:'Over Ons',url:'/pages/over/' });break;case 'diensten':breadcrumbs.push({name:'Diensten',url:'/pages/diensten/' });break;case 'projecten':breadcrumbs.push({name:'Projecten',url:'/pages/projecten/' });break;case 'contact':breadcrumbs.push({name:'Contact',url:'/pages/contact/' });break;case 'ai-generator':breadcrumbs.push({name:'Projecten',url:'/pages/projecten/' });breadcrumbs.push({name:'AI Generator',url:'/pages/projecten/gemini-generator.html' });break} return breadcrumbs.map((crumb,index) => {const isLast = index === breadcrumbs.length - 1;return ` ${isLast ? '' :'<a href="' + crumb.url + '">'}${crumb.name}${isLast ? '' :'</a>'} ${isLast ? '' :'<span class="separator">></span>'} `}).join('')} initFAQSchema() {const faqData = this.getFAQData();if (faqData.length > 0) {const faqElement = document.createElement('div');faqElement.className = 'faq-section rich-snippet';faqElement.innerHTML = ` <div itemscope itemtype="https:${faqData.map(faq => ` <div itemscope itemprop="mainEntity" itemtype="https:<h3 itemprop="name">${faq.question}</h3> <div itemscope itemprop="acceptedAnswer" itemtype="https:<div itemprop="text">${faq.answer}</div> </div> </div> `).join('')} </div> `;const mainContent = document.querySelector('main');if (mainContent) {mainContent.appendChild(faqElement)} } } getFAQData() {return [ {question:"Welke diensten biedt Yannova aan?",answer:"Yannova biedt isolatiewerken,renovatiewerken,platedakken,ramen en deuren,en tuinaanleg. Wij zijn gespecialiseerd in duurzame oplossingen voor energiebesparing en woningverbetering." },{question:"In welk gebied werkt Yannova?",answer:"Wij bedienen Amsterdam en de hele regio Noord-Holland. Onze lokale kennis en ervaring zorgen voor de beste resultaten in uw specifieke omgeving." },{question:"Hoe lang duurt een gemiddeld project?",answer:"De duur van een project hangt af van de omvang en complexiteit. Een gemiddeld isolatieproject duurt 1-3 dagen,terwijl een complete renovatie 2-6 weken kan duren." },{question:"Biedt Yannova garantie op werk?",answer:"Ja,wij bieden uitgebreide garantie op al ons werk. Isolatiewerken hebben 25 jaar garantie,ramen en deuren 10 jaar,en renovatiewerken 5 jaar garantie." } ]} initReviewSchema() {const reviews = this.getReviewData();if (reviews.length > 0) {const reviewElement = document.createElement('div');reviewElement.className = 'reviews-section rich-snippet';reviewElement.innerHTML = ` <div itemscope itemtype="https:<div itemprop="aggregateRating" itemscope itemtype="https:<meta itemprop="ratingValue" content="4.8"> <meta itemprop="reviewCount" content="127"> <meta itemprop="bestRating" content="5"> <meta itemprop="worstRating" content="1"> </div> ${reviews.map(review => ` <div itemscope itemprop="review" itemtype="https:<div itemprop="author" itemscope itemtype="https:<span itemprop="name">${review.author}</span> </div> <div itemprop="reviewRating" itemscope itemtype="https:<meta itemprop="ratingValue" content="${review.rating}"> <meta itemprop="bestRating" content="5"> </div> <div itemprop="reviewBody">${review.text}</div> <div itemprop="datePublished" content="${review.date}">${review.date}</div> </div> `).join('')} </div> `;const mainContent = document.querySelector('main');if (mainContent) {mainContent.appendChild(reviewElement)} } } getReviewData() {return [ {author:"Jan de Vries",rating:5,text:"Uitstekende service! Onze dakisolatie is perfect uitgevoerd en we merken direct het verschil in comfort en energiekosten.",date:"2024-01-15" },{author:"Maria van der Berg",rating:5,text:"Professioneel team dat onze renovatie tot in de perfectie heeft uitgevoerd. Zeker een aanrader!",date:"2024-01-10" },{author:"Peter Jansen",rating:4,text:"Goede kwaliteit ramen en deuren. Installatie was netjes en op tijd. Tevreden klant!",date:"2024-01-05" } ]} getPageData() {const baseData = {siteName:this.siteName,baseUrl:this.baseUrl,defaultImage:this.defaultImage };const pageConfigs = {home:{title:'Yannova Ramen en Deuren | Isolatiewerken,Renovatiewerken,Platedakken & Tuinaanleg',description:'Yannova - Uw specialist in isolatiewerken,renovatiewerken,platedakken,ramen en deuren,en tuinaanleg. Professionele installatie,energiebesparing en duurzame oplossingen voor uw woning in Amsterdam en omgeving.',keywords:'isolatiewerken,renovatiewerken,platedakken,ramen,deuren,schuifdeuren,garagedeuren,tuinaanleg,energiebesparing,isolatieglas,dakisolatie,spouwmuurisolatie,vloerisolatie,zolderisolatie,renovatie,verbouwing,platedak,EPDM dak,bitumen dak,tuinontwerp,tuinaanleg,Amsterdam,Noord-Holland,duurzaam,energiezuinig,installatie,advies,offerte',ogType:'website',imageAlt:'Yannova team aan het werk bij isolatiewerken en renovatie' },over:{title:'Over Yannova | Specialist in Isolatiewerken,Renovatiewerken & Platedakken',description:'Leer meer over Yannova. Ons team van vakmensen met 15+ jaar ervaring zorgt voor perfecte isolatiewerken,renovatiewerken,platedakken,ramen en deuren,en tuinaanleg.',keywords:'over yannova,team,ervaring,vakmensen,kwaliteit,garantie,isolatiewerken specialist,renovatie expert,platedakken specialist',ogType:'website',imageAlt:'Yannova team van ervaren vakmensen' },diensten:{title:'Onze Diensten | Isolatiewerken,Renovatiewerken,Platedakken & Meer',description:'Ontdek onze professionele diensten:isolatiewerken,renovatiewerken,platedakken,ramen en deuren,en tuinaanleg. Van advies tot installatie en onderhoud in Amsterdam en omgeving.',keywords:'diensten,isolatiewerken,renovatiewerken,platedakken,ramen,deuren,installatie,onderhoud,advies,dakisolatie,spouwmuurisolatie,vloerisolatie,zolderisolatie,EPDM,bitumen,groendak,energiezuinige ramen,schuifdeuren,garagedeuren,tuinontwerp,tuinaanleg',ogType:'website',imageAlt:'Yannova diensten overzicht - isolatiewerken,renovatiewerken,platedakken' },projecten:{title:'Onze Projecten | Isolatiewerken,Renovatiewerken & Platedakken Realisaties',description:'Bekijk onze projecten en realisaties. Van moderne appartementen tot historische villa\'s. Isolatiewerken,renovatiewerken,platedakken,ramen en deuren,en tuinaanleg projecten.',keywords:'projecten,realisaties,portfolio,renovatie,nieuwbouw,isolatiewerken projecten,renovatiewerken projecten,platedakken projecten,ramen deuren projecten,tuinaanleg projecten,voor na foto\'s',ogType:'website',imageAlt:'Yannova projecten portfolio - voor en na foto\'s' },contact:{title:'Contact | Yannova Ramen en Deuren - Vraag Gratis Offerte',description:'Neem contact op met Yannova voor isolatiewerken,renovatiewerken,platedakken,ramen en deuren,en tuinaanleg. Vraag een gratis offerte aan of plan een afspraak in Amsterdam en omgeving.',keywords:'contact,offerte,afspraak,telefoon,email,adres,gratis offerte,isolatiewerken offerte,renovatiewerken offerte,platedakken offerte,ramen deuren offerte,tuinaanleg offerte',ogType:'website',imageAlt:'Contact Yannova voor gratis offerte' },'ai-generator':{title:'AI Generator | Yannova - Innovatieve Project Visualisatie',description:'Gebruik onze AI Generator om uw isolatiewerken,renovatiewerken,platedakken,ramen en deuren,en tuinaanleg projecten te visualiseren. Gratis tool voor project planning.',keywords:'AI generator,project visualisatie,isolatiewerken AI,renovatiewerken AI,platedakken AI,ramen deuren AI,tuinaanleg AI,project planning,visualisatie tool',ogType:'website',imageAlt:'Yannova AI Generator voor project visualisatie' } };const config = pageConfigs[this.currentPage] || pageConfigs.home;return {...config,...baseData,image:`${baseData.baseUrl}${baseData.defaultImage}` }} setMetaTag(name,content,attribute = 'name') {let meta = document.querySelector(`meta[${attribute}="${name}"]`);if (!meta) {meta = document.createElement('meta');meta.setAttribute(attribute,name);document.head.appendChild(meta)} meta.setAttribute('content',content)} setCanonicalURL() {let canonical = document.querySelector('link[rel="canonical"]');if (!canonical) {canonical = document.createElement('link');canonical.setAttribute('rel','canonical');document.head.appendChild(canonical)} canonical.setAttribute('href',window.location.href)} setAlternateLanguages() {const hreflang = document.createElement('link');hreflang.setAttribute('rel','alternate');hreflang.setAttribute('hreflang','nl');hreflang.setAttribute('href',window.location.href);document.head.appendChild(hreflang)} trackEvent(eventName,parameters = {}) {if (typeof gtag !== 'undefined') {gtag('event',eventName,parameters)} } updateMetaTags(newData) {Object.keys(newData).forEach(key => {this.setMetaTag(key,newData[key])})} addCustomStructuredData(data) {const script = document.createElement('script');script.type = 'application/ld+json';script.textContent = JSON.stringify(data);document.head.appendChild(script)} } document.addEventListener('DOMContentLoaded',() => {window.enhancedSEOManager = new EnhancedSEOManager()});if (typeof module !== 'undefined' && module.exports) {module.exports = EnhancedSEOManager} class YannovaChatbotEnhanced {constructor() {this.isOpen = false;this.messages = [];this.sessionId = this.generateSessionId();this.isTyping = false;this.lastMessageId = null;this.apiBaseUrl = window.location.origin + '/api';this.retryCount = 0;this.maxRetries = 3;this.socket = null;this.isConnected = false;this.reconnectAttempts = 0;this.maxReconnectAttempts = 5;this.init()} init() {this.createChatbotHTML();this.bindEvents();this.loadChatHistory();this.sendWelcomeMessage();this.initWebSocket()} generateSessionId() {return 'session_' + Date.now() + '_' + Math.random().toString(36).substr(2,9)} initWebSocket() {try {this.socket = io();this.socket.on('connect',() => {this.isConnected = true;this.reconnectAttempts = 0;this.updateConnectionStatus('connected')});this.socket.on('disconnect',() => {this.isConnected = false;this.updateConnectionStatus('disconnected');this.attemptReconnect()});this.socket.on('connect_error',(error) => {console.error('WebSocket connection error:',error);this.isConnected = false;this.updateConnectionStatus('error')});this.socket.on('chat-update',(data) => {if (data.sessionId === this.sessionId) {this.handleRealTimeUpdate(data)} });this.socket.on('admin-message',(data) => {this.handleAdminMessage(data)})} catch (error) {console.error('Failed to initialize WebSocket:',error);this.updateConnectionStatus('error')} } attemptReconnect() {if (this.reconnectAttempts < this.maxReconnectAttempts) {this.reconnectAttempts++;setTimeout(() => {`);this.initWebSocket()},2000 * this.reconnectAttempts)} } updateConnectionStatus(status) {const statusIndicator = document.getElementById('connection-status');if (statusIndicator) {statusIndicator.className = `connection-status ${status}`;statusIndicator.title = this.getStatusMessage(status)} } getStatusMessage(status) {const messages = {connected:'Verbonden met server',disconnected:'Verbinding verbroken',error:'Verbindingsfout' };return messages[status] || 'Onbekende status'} createChatbotHTML() {const chatbotHTML = ` <div id="yannova-chatbot" class="chatbot-container"> <div class="chatbot-toggle" id="chatbot-toggle"> <i class="fas fa-comments"></i> <span class="notification-badge" id="notification-badge" style="display:none;">1</span> <div class="connection-status" id="connection-status" title="Verbinding status"></div> </div> <div class="chatbot-window" id="chatbot-window"> <div class="chatbot-header"> <div class="chatbot-title"> <i class="fas fa-home"></i> <span>Yannova Assistent</span> <div class="typing-indicator-small" id="typing-indicator-small" style="display:none;"> <div class="typing-dot"></div> <div class="typing-dot"></div> <div class="typing-dot"></div> </div> </div> <div class="chatbot-controls"> <button class="chatbot-minimize" id="chatbot-minimize" title="Minimaliseren"> <i class="fas fa-minus"></i> </button> <button class="chatbot-close" id="chatbot-close" title="Sluiten"> <i class="fas fa-times"></i> </button> </div> </div> <div class="chatbot-messages" id="chatbot-messages"> <!-- Messages will be inserted here --> </div> <div class="chatbot-input-container"> <div class="quick-actions" id="quick-actions"> <button class="quick-action-btn" data-action="offerte"> <i class="fas fa-calculator"></i> <span>Offerte</span> </button> <button class="quick-action-btn" data-action="contact"> <i class="fas fa-phone"></i> <span>Contact</span> </button> <button class="quick-action-btn" data-action="openingstijden"> <i class="fas fa-clock"></i> <span>Tijden</span> </button> <button class="quick-action-btn" data-action="garantie"> <i class="fas fa-shield-alt"></i> <span>Garantie</span> </button> </div> <div class="chatbot-input-wrapper"> <input type="text" id="chatbot-input" placeholder="Stel uw vraag..." maxlength="500" autocomplete="off"> <button id="chatbot-send" title="Verstuur bericht"> <i class="fas fa-paper-plane"></i> </button> </div> <div class="chatbot-footer"> <span class="message-count" id="message-count">0 berichten</span> <button class="clear-history-btn" id="clear-history-btn" title="Geschiedenis wissen"> <i class="fas fa-trash"></i> </button> </div> </div> </div> </div> `;document.body.insertAdjacentHTML('beforeend',chatbotHTML);this.addChatbotStyles()} addChatbotStyles() {const styles = ` <style> .chatbot-container {position:fixed;bottom:20px;right:20px;z-index:10000;font-family:'Segoe UI',Tahoma,Geneva,Verdana,sans-serif} .chatbot-toggle {width:60px;height:60px;background:linear-gradient(135deg,#d4a574,#b8935f);border-radius:50%;display:flex;align-items:center;justify-content:center;cursor:pointer;box-shadow:0 4px 12px rgba(212,165,116,0.3);transition:all 0.3s ease;position:relative} .chatbot-toggle:hover {transform:scale(1.1);box-shadow:0 6px 20px rgba(212,165,116,0.4)} .chatbot-toggle i {color:#1a1a1a;font-size:24px} .notification-badge {position:absolute;top:-5px;right:-5px;background:#e74c3c;color:white;border-radius:50%;width:20px;height:20px;display:flex;align-items:center;justify-content:center;font-size:12px;font-weight:bold;animation:pulse 2s infinite} @keyframes pulse {0% {transform:scale(1)} 50% {transform:scale(1.1)} 100% {transform:scale(1)} } .connection-status {position:absolute;bottom:-5px;right:-5px;width:12px;height:12px;border-radius:50%;border:2px solid white} .connection-status.connected {background:#27ae60} .connection-status.disconnected {background:#e74c3c} .connection-status.error {background:#f39c12} .chatbot-window {position:absolute;bottom:80px;right:0;width:380px;height:600px;background:white;border-radius:15px;box-shadow:0 10px 30px rgba(0,0,0,0.2);display:none;flex-direction:column;overflow:hidden;border:1px solid #e0e0e0} .chatbot-window.open {display:flex;animation:slideUp 0.3s ease} @keyframes slideUp {from {opacity:0;transform:translateY(20px)} to {opacity:1;transform:translateY(0)} } .chatbot-header {background:linear-gradient(135deg,#2c3e50,#34495e);color:white;padding:15px;display:flex;justify-content:space-between;align-items:center} .chatbot-title {display:flex;align-items:center;gap:10px;font-weight:600} .chatbot-title i {color:#d4a574} .typing-indicator-small {display:flex;gap:3px;margin-left:10px} .typing-indicator-small .typing-dot {width:4px;height:4px;background:#d4a574;border-radius:50%;animation:typingSmall 1.4s infinite} .typing-indicator-small .typing-dot:nth-child(2) {animation-delay:0.2s} .typing-indicator-small .typing-dot:nth-child(3) {animation-delay:0.4s} @keyframes typingSmall {0%,60%,100% {transform:translateY(0)} 30% {transform:translateY(-5px)} } .chatbot-controls {display:flex;gap:5px} .chatbot-minimize,.chatbot-close {background:none;border:none;color:white;cursor:pointer;font-size:16px;padding:5px;border-radius:50%;transition:background 0.3s;width:30px;height:30px;display:flex;align-items:center;justify-content:center} .chatbot-minimize:hover,.chatbot-close:hover {background:rgba(255,255,255,0.1)} .chatbot-messages {flex:1;padding:15px;overflow-y:auto;background:#f8f9fa;scroll-behavior:smooth} .message {margin-bottom:15px;display:flex;align-items:flex-start;gap:10px;animation:messageSlide 0.3s ease} @keyframes messageSlide {from {opacity:0;transform:translateX(-10px)} to {opacity:1;transform:translateX(0)} } .message.user {flex-direction:row-reverse} .message.user .message-content {background:linear-gradient(135deg,#d4a574,#b8935f);color:#1a1a1a} .message.bot .message-content {background:white;color:#333;border:1px solid #e0e0e0} .message-avatar {width:32px;height:32px;border-radius:50%;display:flex;align-items:center;justify-content:center;font-size:12px;font-weight:bold;flex-shrink:0} .message.user .message-avatar {background:#d4a574;color:#1a1a1a} .message.bot .message-avatar {background:#2c3e50;color:white} .message-content {max-width:80%;padding:12px 16px;border-radius:18px;font-size:14px;line-height:1.4;word-wrap:break-word} .message-time {font-size:11px;color:#999;margin-top:5px;text-align:right} .typing-indicator {display:flex;align-items:center;gap:5px;padding:12px 16px;background:white;border-radius:18px;border:1px solid #e0e0e0;max-width:80px} .typing-dot {width:6px;height:6px;background:#999;border-radius:50%;animation:typing 1.4s infinite} .typing-dot:nth-child(2) {animation-delay:0.2s} .typing-dot:nth-child(3) {animation-delay:0.4s} @keyframes typing {0%,60%,100% {transform:translateY(0)} 30% {transform:translateY(-10px)} } .quick-actions {padding:12px 15px;display:flex;gap:8px;flex-wrap:wrap;background:#f8f9fa;border-bottom:1px solid #e0e0e0} .quick-action-btn {background:white;border:1px solid #e0e0e0;padding:8px 12px;border-radius:20px;font-size:12px;cursor:pointer;transition:all 0.3s;display:flex;align-items:center;gap:5px;flex:1;min-width:0} .quick-action-btn:hover {background:#d4a574;color:white;border-color:#d4a574;transform:translateY(-1px)} .quick-action-btn i {font-size:10px} .chatbot-input-wrapper {padding:15px;display:flex;gap:10px;background:white;border-top:1px solid #e0e0e0} #chatbot-input {flex:1;padding:12px 16px;border:1px solid #ddd;border-radius:25px;outline:none;font-size:14px;transition:border-color 0.3s} #chatbot-input:focus {border-color:#d4a574} #chatbot-send {width:44px;height:44px;background:linear-gradient(135deg,#d4a574,#b8935f);border:none;border-radius:50%;color:white;cursor:pointer;display:flex;align-items:center;justify-content:center;transition:all 0.3s} #chatbot-send:hover {transform:scale(1.1);box-shadow:0 4px 12px rgba(212,165,116,0.3)} #chatbot-send:disabled {opacity:0.5;cursor:not-allowed;transform:none} .chatbot-footer {padding:8px 15px;background:#f8f9fa;border-top:1px solid #e0e0e0;display:flex;justify-content:space-between;align-items:center;font-size:12px;color:#666} .message-count {font-weight:500} .clear-history-btn {background:none;border:none;color:#999;cursor:pointer;padding:4px;border-radius:4px;transition:all 0.3s} .clear-history-btn:hover {color:#e74c3c;background:rgba(231,76,60,0.1)} .chatbot-messages::-webkit-scrollbar {width:6px} .chatbot-messages::-webkit-scrollbar-track {background:#f1f1f1} .chatbot-messages::-webkit-scrollbar-thumb {background:#d4a574;border-radius:3px} .chatbot-messages::-webkit-scrollbar-thumb:hover {background:#b8935f} @media (max-width:480px) {.chatbot-window {width:calc(100vw - 40px);height:calc(100vh - 120px);bottom:80px;right:20px;left:20px} .quick-action-btn span {display:none} .quick-action-btn {min-width:40px;justify-content:center} } @media (prefers-color-scheme:dark) {.chatbot-window {background:#2c3e50;border-color:#34495e} .chatbot-messages {background:#34495e} .message.bot .message-content {background:#2c3e50;color:#ecf0f1;border-color:#34495e} .quick-actions {background:#34495e;border-color:#2c3e50} .quick-action-btn {background:#2c3e50;color:#ecf0f1;border-color:#34495e} .chatbot-input-wrapper {background:#2c3e50;border-color:#34495e} #chatbot-input {background:#34495e;color:#ecf0f1;border-color:#34495e} .chatbot-footer {background:#34495e;border-color:#2c3e50;color:#bdc3c7} } </style> `;document.head.insertAdjacentHTML('beforeend',styles)} bindEvents() {const toggle = document.getElementById('chatbot-toggle');const close = document.getElementById('chatbot-close');const minimize = document.getElementById('chatbot-minimize');const input = document.getElementById('chatbot-input');const send = document.getElementById('chatbot-send');const quickActions = document.querySelectorAll('.quick-action-btn');const clearHistory = document.getElementById('clear-history-btn');toggle.addEventListener('click',() => this.toggleChatbot());close.addEventListener('click',() => this.closeChatbot());minimize.addEventListener('click',() => this.minimizeChatbot());send.addEventListener('click',() => this.sendMessage());clearHistory.addEventListener('click',() => this.clearHistory());input.addEventListener('keypress',(e) => {if (e.key === 'Enter' && !e.shiftKey) {e.preventDefault();this.sendMessage()} });input.addEventListener('input',() => {this.updateSendButton()});quickActions.forEach(btn => {btn.addEventListener('click',(e) => {const action = e.target.closest('.quick-action-btn').getAttribute('data-action');this.handleQuickAction(action)})});input.addEventListener('input',() => {input.style.height = 'auto';input.style.height = Math.min(input.scrollHeight,100) + 'px'})} toggleChatbot() {this.isOpen = !this.isOpen;const window = document.getElementById('chatbot-window');const badge = document.getElementById('notification-badge');if (this.isOpen) {window.classList.add('open');badge.style.display = 'none';document.getElementById('chatbot-input').focus()} else {window.classList.remove('open')} } minimizeChatbot() {this.isOpen = false;document.getElementById('chatbot-window').classList.remove('open')} closeChatbot() {this.isOpen = false;document.getElementById('chatbot-window').classList.remove('open')} updateSendButton() {const input = document.getElementById('chatbot-input');const send = document.getElementById('chatbot-send');const hasText = input.value.trim().length > 0;send.disabled = !hasText || this.isTyping;send.style.opacity = hasText && !this.isTyping ? '1' :'0.5'} sendWelcomeMessage() {const welcomeMessage = {text:"Hallo! Ik ben de Yannova assistent. Hoe kan ik u vandaag helpen met uw ramen en deuren?",timestamp:new Date() };this.addMessage(welcomeMessage,'bot')} addMessage(message,sender) {const messagesContainer = document.getElementById('chatbot-messages');const messageElement = document.createElement('div');messageElement.className = `message ${sender}`;const avatar = document.createElement('div');avatar.className = 'message-avatar';avatar.textContent = sender === 'user' ? 'U' :'Y';const content = document.createElement('div');content.className = 'message-content';content.textContent = message.text;const time = document.createElement('div');time.className = 'message-time';time.textContent = new Date().toLocaleTimeString('nl-NL',{hour:'2-digit',minute:'2-digit' });content.appendChild(time);messageElement.appendChild(avatar);messageElement.appendChild(content);messagesContainer.appendChild(messageElement);messagesContainer.scrollTop = messagesContainer.scrollHeight;this.messages.push({...message,sender,timestamp:new Date() });this.updateMessageCount();this.saveChatHistory()} updateMessageCount() {const count = this.messages.length;document.getElementById('message-count').textContent = `${count} bericht${count !== 1 ? 'en' :''}`} showTypingIndicator() {if (this.isTyping) return;this.isTyping = true;const messagesContainer = document.getElementById('chatbot-messages');const typingElement = document.createElement('div');typingElement.className = 'message bot typing-indicator';typingElement.id = 'typing-indicator';const avatar = document.createElement('div');avatar.className = 'message-avatar';avatar.textContent = 'Y';const dots = document.createElement('div');dots.innerHTML = '<div class="typing-dot"></div><div class="typing-dot"></div><div class="typing-dot"></div>';typingElement.appendChild(avatar);typingElement.appendChild(dots);messagesContainer.appendChild(typingElement);messagesContainer.scrollTop = messagesContainer.scrollHeight;document.getElementById('typing-indicator-small').style.display = 'flex'} hideTypingIndicator() {const typingElement = document.getElementById('typing-indicator');if (typingElement) {typingElement.remove()} this.isTyping = false;document.getElementById('typing-indicator-small').style.display = 'none'} async sendMessage() {const input = document.getElementById('chatbot-input');const message = input.value.trim();if (!message || this.isTyping) return;this.addMessage({text:message },'user');input.value = '';this.updateSendButton();this.showTypingIndicator();try {const response = await fetch(`${this.apiBaseUrl}/chatbot`,{method:'POST',headers:{'Content-Type':'application/json',},body:JSON.stringify({message:message,sessionId:this.sessionId }) });const data = await response.json();this.hideTypingIndicator();if (data.success) {this.addMessage({text:data.response },'bot');this.lastMessageId = data.chatId} else {this.addMessage({text:'Er is een fout opgetreden. Probeer het later opnieuw.' },'bot')} } catch (error) {console.error('Error sending message:',error);this.hideTypingIndicator();this.addMessage({text:'Er is een fout opgetreden. Probeer het later opnieuw.' },'bot')} } handleRealTimeUpdate(data) {if (data.type === 'new_message') {this.addMessage({text:data.message },'bot')} } handleAdminMessage(data) {this.addMessage({text:data.message },'bot');this.showNotification('Nieuw bericht van admin')} showNotification(message) {if (Notification.permission === 'granted') {new Notification('Yannova Chatbot',{body:message,icon:'/assets/images/favicon.ico' })} } handleQuickAction(action) {const responses = {offerte:"Voor een offerte kunt u ons contactformulier invullen of bellen naar +32 (0)477 28 10 28. We maken graag een afspraak om uw wensen te bespreken.",contact:"U kunt ons bereiken via:\n📞 Telefoon:+32 (0)477 28 10 28\n📧 Email:info@yannova.nl\n📍 Adres:Industrieweg 123,1234 AB Amsterdam",openingstijden:"Onze openingstijden zijn:\n🕐 Maandag t/m Vrijdag:8:00 - 18:00\n🕐 Zaterdag:9:00 - 16:00\n🕐 Zondag:Gesloten",garantie:"Op al onze ramen en deuren geven wij uitgebreide garantie. De garantievoorwaarden verschillen per product en leverancier. Neem contact op voor specifieke informatie." };this.showTypingIndicator();setTimeout(() => {this.hideTypingIndicator();this.addMessage({text:responses[action] },'bot')},800)} saveChatHistory() {try {localStorage.setItem('yannova_chat_history',JSON.stringify(this.messages))} catch (e) {} } loadChatHistory() {try {const saved = localStorage.getItem('yannova_chat_history');if (saved) {this.messages = JSON.parse(saved);this.updateMessageCount();if (this.messages.length > 0 && !this.isOpen) {document.getElementById('notification-badge').style.display = 'flex'} } } catch (e) {} } clearHistory() {if (confirm('Weet u zeker dat u de chatgeschiedenis wilt wissen?')) {this.messages = [];localStorage.removeItem('yannova_chat_history');document.getElementById('chatbot-messages').innerHTML = '';this.updateMessageCount();this.sendWelcomeMessage()} } getStats() {return {totalMessages:this.messages.length,userMessages:this.messages.filter(m => m.sender === 'user').length,botMessages:this.messages.filter(m => m.sender === 'bot').length,sessionId:this.sessionId,startTime:this.messages[0]?.timestamp || new Date(),isConnected:this.isConnected }} } if ('Notification' in window && Notification.permission === 'default') {Notification.requestPermission()} document.addEventListener('DOMContentLoaded',() => {window.yannovaChatbotEnhanced = new YannovaChatbotEnhanced()});if (typeof module !== 'undefined' && module.exports) {module.exports = YannovaChatbotEnhanced}